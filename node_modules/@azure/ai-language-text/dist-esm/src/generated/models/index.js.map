{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/generated/models/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type AnalyzeActionUnion =\n  | AnalyzeAction\n  | AnalyzeTextEntityLinkingInput\n  | AnalyzeTextEntityRecognitionInput\n  | AnalyzeTextKeyPhraseExtractionInput\n  | AnalyzeTextPiiEntitiesRecognitionInput\n  | AnalyzeTextLanguageDetectionInput\n  | AnalyzeTextSentimentAnalysisInput\n  | AnalyzeTextDynamicClassificationInput;\nexport type AnalyzeTextTaskResultUnion =\n  | AnalyzeTextTaskResult\n  | SentimentTaskResult\n  | EntitiesTaskResult\n  | EntityLinkingTaskResult\n  | PiiTaskResult\n  | KeyPhraseTaskResult\n  | LanguageDetectionTaskResult\n  | DynamicClassificationTaskResult;\nexport type BaseResolutionUnion =\n  | BaseResolution\n  | AgeResolution\n  | VolumeResolution\n  | SpeedResolution\n  | AreaResolution\n  | LengthResolution\n  | InformationResolution\n  | TemperatureResolution\n  | WeightResolution\n  | CurrencyResolution\n  | BooleanResolution\n  | DateTimeResolution\n  | NumberResolution\n  | OrdinalResolution\n  | TemporalSpanResolution\n  | NumericRangeResolution;\nexport type AnalyzeBatchActionUnion =\n  | AnalyzeBatchAction\n  | CustomEntitiesLROTask\n  | CustomSingleLabelClassificationLROTask\n  | CustomMultiLabelClassificationLROTask\n  | HealthcareLROTask\n  | SentimentAnalysisLROTask\n  | EntitiesLROTask\n  | EntityLinkingLROTask\n  | PiiLROTask\n  | ExtractiveSummarizationLROTask\n  | KeyPhraseLROTask\n  | AbstractiveSummarizationLROTask;\nexport type AnalyzeTextLROResultUnion =\n  | AnalyzeTextLROResult\n  | EntityRecognitionLROResult\n  | CustomEntityRecognitionLROResult\n  | CustomSingleLabelClassificationLROResult\n  | CustomMultiLabelClassificationLROResult\n  | EntityLinkingLROResult\n  | PiiEntityRecognitionLROResult\n  | ExtractiveSummarizationLROResult\n  | HealthcareLROResult\n  | SentimentLROResult\n  | KeyPhraseExtractionLROResult\n  | AbstractiveSummarizationLROResult;\n\nexport interface AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind:\n    | \"EntityLinking\"\n    | \"EntityRecognition\"\n    | \"KeyPhraseExtraction\"\n    | \"PiiEntityRecognition\"\n    | \"LanguageDetection\"\n    | \"SentimentAnalysis\"\n    | \"DynamicClassification\";\n}\n\nexport interface AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind:\n    | \"SentimentAnalysisResults\"\n    | \"EntityRecognitionResults\"\n    | \"EntityLinkingResults\"\n    | \"PiiEntityRecognitionResults\"\n    | \"KeyPhraseExtractionResults\"\n    | \"LanguageDetectionResults\"\n    | \"DynamicClassificationResults\";\n}\n\n/** Error response. */\nexport interface ErrorResponse {\n  /** The error object. */\n  error: ErrorModel;\n}\n\n/** The error object. */\nexport interface ErrorModel {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** One of a server-defined set of error codes. */\n  code: ErrorCode;\n  /** A human-readable representation of the error. */\n  message: string;\n  /** The target of the error. */\n  target?: string;\n  /** An array of details about specific errors that led to this reported error. */\n  details?: ErrorModel[];\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerErrorModel;\n}\n\n/** An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses. */\nexport interface InnerErrorModel {\n  /** One of a server-defined set of error codes. */\n  code: InnerErrorCode;\n  /** Error message. */\n  message: string;\n  /** Error details. */\n  details?: { [propertyName: string]: string };\n  /** Error target. */\n  target?: string;\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerErrorModel;\n}\n\nexport interface AnalyzeTextJobsInput {\n  /** Optional display name for the analysis job. */\n  displayName?: string;\n  /** Default language to use for records requesting automatic language detection. */\n  defaultLanguage?: string;\n  analysisInput: MultiLanguageAnalysisInput;\n  /** The set of tasks to execute on the input documents. */\n  tasks: AnalyzeBatchActionUnion[];\n}\n\nexport interface MultiLanguageAnalysisInput {\n  documents?: TextDocumentInput[];\n}\n\n/** An object representing an individual text document to be analyzed by the Language service. The document contains a unique document ID, the full text of the document, and the language of the document's text. */\nexport interface TextDocumentInput {\n  /** A unique, non-empty document identifier. */\n  id: string;\n  /** The input text to process. */\n  text: string;\n  /** (Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. For Auto Language Detection, use \"auto\". If not set, use \"en\" for English as default. */\n  language?: string;\n}\n\n/** The State of a batched action */\nexport interface BatchActionState {\n  /** The name of the action */\n  actionName?: string;\n}\n\nexport interface JobState {\n  displayName?: string;\n  createdOn: Date;\n  expiresOn?: Date;\n  id: string;\n  modifiedOn: Date;\n  status: OperationStatus;\n  errors?: ErrorModel[];\n  nextLink?: string;\n}\n\nexport interface TasksState {\n  tasks: TasksStateTasks;\n}\n\nexport interface TasksStateTasks {\n  completed: number;\n  failed: number;\n  inProgress: number;\n  total: number;\n  items?: AnalyzeTextLROResultUnion[];\n}\n\n/** Returns the current state of the task. */\nexport interface TaskState {\n  /** The last updated time in UTC for the task. */\n  lastUpdateDateTime: Date;\n  /** The status of the task at the mentioned last update time. */\n  status: State;\n}\n\nexport interface AnalyzeTextJobStatistics {\n  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */\n  statistics?: TextDocumentBatchStatistics;\n}\n\n/** if includeStatistics=true was specified in the request this field will contain information about the request payload. */\nexport interface TextDocumentBatchStatistics {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Number of documents submitted in the request. */\n  documentCount: number;\n  /** Number of valid documents. This excludes empty, over-size limit or non-supported languages documents. */\n  validDocumentCount: number;\n  /** Number of invalid documents. This includes empty, over-size limit or non-supported languages documents. */\n  erroneousDocumentCount: number;\n  /** Number of transactions for the request. */\n  transactionCount: number;\n}\n\nexport interface LanguageDetectionAnalysisInput {\n  documents?: LanguageDetectionInput[];\n}\n\n/** An input to the language detection operation. This object specifies a unique document id, as well as the full text of a document and a hint indicating the document's country of origin to assist the Language predictive model in detecting the document's language. */\nexport interface LanguageDetectionInput {\n  /** Unique, non-empty document identifier. */\n  id: string;\n  /** Full text of the input document. */\n  text: string;\n  /** A hint indicating the document's country of origin to assist the Language predictive model in detecting the document's language. */\n  countryHint?: string;\n}\n\n/** Configuration common to all actions. */\nexport interface ActionCommon {\n  /**\n   * If set to true, you opt-out of having your text input logged for troubleshooting. By default, Cognitive Language Service logs your input text for 48 hours, solely to allow for troubleshooting issues. Setting this parameter to true, disables in logging and may limit our ability to remediate issues that occur.\n   *\n   * Default is false.\n   */\n  disableServiceLogs?: boolean;\n}\n\nexport interface CustomResult {\n  /** Errors by document id. */\n  errors: DocumentError[];\n  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */\n  statistics?: TextDocumentBatchStatistics;\n  /** This field indicates the project name for the model. */\n  projectName: string;\n  /** This field indicates the deployment name for the model. */\n  deploymentName: string;\n}\n\nexport interface DocumentError {\n  /** Document Id. */\n  id: string;\n  /** Document Error. */\n  error: ErrorModel;\n}\n\n/** The abstract base class for entity resolutions. */\nexport interface BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind:\n    | \"AgeResolution\"\n    | \"VolumeResolution\"\n    | \"SpeedResolution\"\n    | \"AreaResolution\"\n    | \"LengthResolution\"\n    | \"InformationResolution\"\n    | \"TemperatureResolution\"\n    | \"WeightResolution\"\n    | \"CurrencyResolution\"\n    | \"BooleanResolution\"\n    | \"DateTimeResolution\"\n    | \"NumberResolution\"\n    | \"OrdinalResolution\"\n    | \"TemporalSpanResolution\"\n    | \"NumericRangeResolution\";\n}\n\n/** A word or phrase identified as an entity that is categorized within a taxonomy of types. The set of categories recognized by the Language service is described at https://docs.microsoft.com/azure/cognitive-services/language-service/named-entity-recognition/concepts/named-entity-categories . */\nexport interface Entity {\n  /** Entity text as appears in the request. */\n  text: string;\n  /** Entity type. */\n  category: string;\n  /** (Optional) Entity sub type. */\n  subCategory?: string;\n  /** Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. */\n  offset: number;\n  /** Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. */\n  length: number;\n  /** Confidence score between 0 and 1 of the extracted entity. */\n  confidenceScore: number;\n}\n\nexport interface DocumentResult {\n  /** Unique, non-empty document identifier. */\n  id: string;\n  /** Warnings encountered while processing document. */\n  warnings: DocumentWarning[];\n  /** if showStats=true was specified in the request this field will contain information about the document payload. */\n  statistics?: TextDocumentStatistics;\n}\n\n/** Represents a warning encountered while processing a document. */\nexport interface DocumentWarning {\n  /** Error code. */\n  code: WarningCode;\n  /** Warning message. */\n  message: string;\n}\n\n/** if includeStatistics=true was specified in the request this field will contain information about the document payload. */\nexport interface TextDocumentStatistics {\n  /** Number of text elements recognized in the document. */\n  characterCount: number;\n  /** Number of transactions for the document. */\n  transactionCount: number;\n}\n\n/** The auto-detected language of the input document. */\nexport interface DocumentDetectedLanguage {\n  /** If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. */\n  detectedLanguage?: DetectedLanguage;\n}\n\n/** Information about the language of a document as identified by the Language service. */\nexport interface DetectedLanguage {\n  /** Long name of a detected language (e.g. English, French). */\n  name: string;\n  /** A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr). */\n  iso6391Name: string;\n  /** A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. */\n  confidenceScore: number;\n  /** Identifies the script of the input document. */\n  script?: ScriptKind;\n}\n\n/** A classification result from a custom classify document single category action */\nexport interface ClassificationCategory {\n  /** Classification type. */\n  category: string;\n  /** Confidence score between 0 and 1 of the recognized class. */\n  confidenceScore: number;\n}\n\n/** A type representing a reference for the healthcare entity into a specific entity catalog. */\nexport interface HealthcareEntity {\n  /** Entity text as appears in the request. */\n  text: string;\n  /** Healthcare Entity Category. */\n  category: HealthcareEntityCategory;\n  /** (Optional) Entity sub type. */\n  subCategory?: string;\n  /** Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. */\n  offset: number;\n  /** Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. */\n  length: number;\n  /** Confidence score between 0 and 1 of the extracted entity. */\n  confidenceScore: number;\n  /** An object that describes metadata about the healthcare entity such as whether it is hypothetical or conditional. */\n  assertion?: HealthcareAssertion;\n  /** Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'. */\n  normalizedText?: string;\n  /** Entity references in known data sources. */\n  dataSources?: EntityDataSource[];\n}\n\n/** An object that describes metadata about the healthcare entity such as whether it is hypothetical or conditional. */\nexport interface HealthcareAssertion {\n  /** Describes any conditionality on the entity. */\n  conditionality?: EntityConditionality;\n  /** Describes the entities certainty and polarity. */\n  certainty?: EntityCertainty;\n  /** Describes if the entity is the subject of the text or if it describes someone else. */\n  association?: EntityAssociation;\n}\n\n/** A type representing a reference for the healthcare entity into a specific entity catalog. */\nexport interface EntityDataSource {\n  /** Entity Catalog. Examples include: UMLS, CHV, MSH, etc. */\n  name: string;\n  /** Entity id in the given source catalog. */\n  entityId: string;\n}\n\n/** Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context. */\nexport interface HealthcareRelation {\n  /** Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc. */\n  relationType: RelationType;\n  /** Confidence score between 0 and 1 of the extracted relation. */\n  confidenceScore?: number;\n  /** The entities in the relation. */\n  entities: HealthcareRelationEntity[];\n}\n\nexport interface HealthcareRelationEntity {\n  /** Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity . */\n  ref: string;\n  /** Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis). */\n  role: string;\n}\n\nexport interface DocumentDetectedLanguageString {\n  /** If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. */\n  detectedLanguage?: string;\n}\n\nexport interface PreBuiltResult {\n  /** Errors by document id. */\n  errors: InputError[];\n  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */\n  statistics?: TextDocumentBatchStatistics;\n  /** This field indicates which model is used for scoring. */\n  modelVersion: string;\n}\n\n/** Contains details of errors encountered during a job execution. */\nexport interface InputError {\n  /** The ID of the input. */\n  id: string;\n  /** Error encountered. */\n  error: ErrorModel;\n}\n\n/** Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative. */\nexport interface SentimentConfidenceScores {\n  /** Confidence score for positive sentiment */\n  positive: number;\n  /** Confidence score for neutral sentiment */\n  neutral: number;\n  /** Confidence score for negative sentiment */\n  negative: number;\n}\n\n/** The predicted sentiment for a given span of text. For more information regarding text sentiment, seehttps://docs.microsoft.com/azure/cognitive-services/language-service/sentiment-opinion-mining/overview. */\nexport interface SentenceSentiment {\n  /** The sentence text. */\n  text: string;\n  /** The predicted Sentiment for the sentence. */\n  sentiment: SentenceSentimentLabel;\n  /** The sentiment confidence score between 0 and 1 for the sentence for all classes. */\n  confidenceScores: SentimentConfidenceScores;\n  /** The sentence offset from the start of the document. */\n  offset: number;\n  /** The length of the sentence. */\n  length: number;\n  /** The array of sentence targets for the sentence. */\n  targets?: SentenceTarget[];\n  /** The array of assessments for the sentence. */\n  assessments?: AssessmentSentiment[];\n}\n\nexport interface SentenceTarget {\n  /** Targeted sentiment in the sentence. */\n  sentiment: TokenSentimentLabel;\n  /** Target sentiment confidence scores for the target in the sentence. */\n  confidenceScores: TargetConfidenceScores;\n  /** The target offset from the start of the sentence. */\n  offset: number;\n  /** The length of the target. */\n  length: number;\n  /** The target text detected. */\n  text: string;\n  /** The array of either assessment or target objects which is related to the target. */\n  relations: TargetRelation[];\n}\n\n/** Represents the confidence scores across all sentiment classes: positive and negative. */\nexport interface TargetConfidenceScores {\n  /** Confidence score for positive sentiment */\n  positive: number;\n  /** Confidence score for negative sentiment */\n  negative: number;\n}\n\nexport interface TargetRelation {\n  /** The type related to the target. */\n  relationType: TargetRelationType;\n  /** The JSON pointer indicating the linked object. */\n  ref: string;\n}\n\n/** An object that contains the predicted sentiment, confidence scores and other information about an assessment of a target. For example, in the sentence \"The food is good\", the assessment of the target 'food' is 'good'. */\nexport interface AssessmentSentiment {\n  /** Assessment sentiment in the sentence. */\n  sentiment: TokenSentimentLabel;\n  /** Assessment sentiment confidence scores in the sentence. */\n  confidenceScores: TargetConfidenceScores;\n  /** The assessment offset from the start of the sentence. */\n  offset: number;\n  /** The length of the assessment. */\n  length: number;\n  /** The assessment text detected. */\n  text: string;\n  /** The indicator representing if the assessment is negated. */\n  isNegated: boolean;\n}\n\n/** A word or phrase identified as a well-known entity within a database, including its formal (disambiguated) name and a link to the entity information within the source database. */\nexport interface LinkedEntity {\n  /** Entity Linking formal name. */\n  name: string;\n  /** List of instances this entity appears in the text. */\n  matches: Match[];\n  /** Language used in the data source. */\n  language: string;\n  /** Unique identifier of the recognized entity from the data source. */\n  dataSourceEntityId?: string;\n  /** URL for the entity's page from the data source. */\n  url: string;\n  /** Data source used to extract entity linking, such as Wiki/Bing etc. */\n  dataSource: string;\n  /** Bing Entity Search API unique identifier of the recognized entity. */\n  bingEntitySearchApiId?: string;\n}\n\n/** Details about the specific substring in a document that refers to a linked entity identified by the Language model. */\nexport interface Match {\n  /** If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned. */\n  confidenceScore: number;\n  /** Entity text as appears in the request. */\n  text: string;\n  /** Start position for the entity match text. */\n  offset: number;\n  /** Length for the entity match text. */\n  length: number;\n}\n\n/** Represents resolutions for quantities. */\nexport interface QuantityResolution {\n  /** The numeric value that the extracted text denotes. */\n  value: number;\n}\n\n/** A sentence that is part of the extracted summary. */\nexport interface SummarySentence {\n  /** The extracted sentence text. */\n  text: string;\n  /** A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance. */\n  rankScore: number;\n  /** The sentence offset from the start of the document, based on the value of the parameter StringIndexType. */\n  offset: number;\n  /** The length of the sentence. */\n  length: number;\n}\n\nexport interface Pagination {\n  nextLink?: string;\n}\n\n/** Supported parameters for an Abstractive Summarization task. */\nexport interface AbstractiveSummarizationTaskParametersBase {\n  /** The max number of sentences to be part of the summary. */\n  maxSentenceCount?: number;\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** An object representing the summarization results of each document. */\nexport interface AbstractiveSummarizationResultBase {\n  /** Response by document */\n  documents: AbstractiveSummaryDocumentResultWithDetectedLanguage[];\n}\n\n/** An object representing a single summary with context for given document. */\nexport interface AbstractiveSummary {\n  /** The text of the summary. */\n  text: string;\n  /** The context list of the summary. */\n  contexts?: SummaryContext[];\n}\n\n/** The context of the summary. */\nexport interface SummaryContext {\n  /** Start position for the context. Use of different 'stringIndexType' values can affect the offset returned. */\n  offset: number;\n  /** The length of the context. Use of different 'stringIndexType' values can affect the length returned. */\n  length: number;\n}\n\nexport interface AnalyzeTextEntityLinkingInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityLinking\";\n  analysisInput?: MultiLanguageAnalysisInput;\n  /** Options for an entity linking action. */\n  parameters?: EntityLinkingAction;\n}\n\nexport interface AnalyzeTextEntityRecognitionInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityRecognition\";\n  analysisInput?: MultiLanguageAnalysisInput;\n  /** Options for an entity recognition action. */\n  parameters?: EntityRecognitionAction;\n}\n\nexport interface AnalyzeTextKeyPhraseExtractionInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"KeyPhraseExtraction\";\n  analysisInput?: MultiLanguageAnalysisInput;\n  /** Options for a key phrase recognition action. */\n  parameters?: KeyPhraseExtractionAction;\n}\n\nexport interface AnalyzeTextPiiEntitiesRecognitionInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"PiiEntityRecognition\";\n  analysisInput?: MultiLanguageAnalysisInput;\n  /** Options for a Pii entity recognition action. */\n  parameters?: PiiEntityRecognitionAction;\n}\n\nexport interface AnalyzeTextLanguageDetectionInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"LanguageDetection\";\n  analysisInput?: LanguageDetectionAnalysisInput;\n  /** Options for a language detection action. */\n  parameters?: LanguageDetectionAction;\n}\n\nexport interface AnalyzeTextSentimentAnalysisInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"SentimentAnalysis\";\n  analysisInput?: MultiLanguageAnalysisInput;\n  /** Options for a sentiment analysis action. */\n  parameters?: SentimentAnalysisAction;\n}\n\nexport interface AnalyzeTextDynamicClassificationInput extends AnalyzeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"DynamicClassification\";\n  analysisInput?: MultiLanguageAnalysisInput;\n  /** Options for a dynamic classification action. */\n  parameters?: DynamicClassificationAction;\n}\n\nexport interface SentimentTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"SentimentAnalysisResults\";\n  results: SentimentResponse;\n}\n\nexport interface EntitiesTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityRecognitionResults\";\n  results: EntitiesResult;\n}\n\nexport interface EntityLinkingTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityLinkingResults\";\n  results: EntityLinkingResult;\n}\n\nexport interface PiiTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"PiiEntityRecognitionResults\";\n  results: PiiResult;\n}\n\nexport interface KeyPhraseTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"KeyPhraseExtractionResults\";\n  results: KeyPhraseResult;\n}\n\nexport interface LanguageDetectionTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"LanguageDetectionResults\";\n  results: LanguageDetectionResult;\n}\n\nexport interface DynamicClassificationTaskResult extends AnalyzeTextTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"DynamicClassificationResults\";\n  results: DynamicClassificationResult;\n}\n\nexport interface AnalyzeBatchAction extends BatchActionState {\n  /** Enumeration of supported long-running Text Analysis tasks. */\n  kind: AnalyzeTextLROTaskKind;\n}\n\nexport interface AnalyzeTextLROResult extends TaskState, BatchActionState {\n  /** Enumeration of supported Text Analysis long-running operation task results. */\n  kind: AnalyzeTextLROResultsKind;\n}\n\nexport interface AnalyzeTextJobState\n  extends JobState,\n    TasksState,\n    AnalyzeTextJobStatistics {}\n\n/** if includeStatistics=true was specified in the request this field will contain information about the document request payload. */\nexport interface DocumentRequestStatistics extends TextDocumentBatchStatistics {\n  /** Number of documents submitted in the request. */\n  documentsCount: number;\n  /** Number of valid documents. This excludes empty, over-size limit or non-supported languages documents. */\n  validDocumentsCount: number;\n  /** Number of invalid documents. This includes empty, over-size limit or non-supported languages documents. */\n  erroneousDocumentsCount: number;\n}\n\n/** Configuration common to all actions that use prebuilt models. */\nexport interface ActionPrebuilt extends ActionCommon {\n  /** The version of the model to be used by the action. */\n  modelVersion?: string;\n}\n\n/** Configuration common to all actions that use custom models. */\nexport interface ActionCustom extends ActionCommon {\n  /** The project name for the model to be used by the action. */\n  projectName: string;\n  /** The deployment name for the model to be used by the action. */\n  deploymentName: string;\n}\n\nexport interface CustomEntitiesResult extends CustomResult {\n  /** Response by document */\n  documents: CustomEntitiesResultDocumentsItem[];\n}\n\nexport interface CustomLabelClassificationResult extends CustomResult {\n  /** Response by document */\n  documents: CustomLabelClassificationResultDocumentsItem[];\n}\n\n/** Represents the Age entity resolution model. */\nexport interface AgeResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"AgeResolution\";\n  /** The Age Unit of measurement */\n  unit: AgeUnit;\n}\n\n/** Represents the volume entity resolution model. */\nexport interface VolumeResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"VolumeResolution\";\n  /** The Volume Unit of measurement */\n  unit: VolumeUnit;\n}\n\n/** Represents the speed entity resolution model. */\nexport interface SpeedResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"SpeedResolution\";\n  /** The speed Unit of measurement */\n  unit: SpeedUnit;\n}\n\n/** Represents the area entity resolution model. */\nexport interface AreaResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"AreaResolution\";\n  /** The area Unit of measurement */\n  unit: AreaUnit;\n}\n\n/** Represents the length entity resolution model. */\nexport interface LengthResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"LengthResolution\";\n  /** The length Unit of measurement */\n  unit: LengthUnit;\n}\n\n/** Represents the information (data) entity resolution model. */\nexport interface InformationResolution\n  extends BaseResolution,\n    QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"InformationResolution\";\n  /** The information (data) Unit of measurement. */\n  unit: InformationUnit;\n}\n\n/** Represents the temperature entity resolution model. */\nexport interface TemperatureResolution\n  extends BaseResolution,\n    QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"TemperatureResolution\";\n  /** The temperature Unit of measurement. */\n  unit: TemperatureUnit;\n}\n\n/** Represents the weight entity resolution model. */\nexport interface WeightResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"WeightResolution\";\n  /** The weight Unit of measurement. */\n  unit: WeightUnit;\n}\n\n/** Represents the currency entity resolution model. */\nexport interface CurrencyResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"CurrencyResolution\";\n  /** The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name. */\n  iso4217?: string;\n  /** The unit of the amount captured in the extracted entity */\n  unit: string;\n}\n\n/** A resolution for boolean expressions */\nexport interface BooleanResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"BooleanResolution\";\n  value: boolean;\n}\n\n/** A resolution for datetime entity instances. */\nexport interface DateTimeResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"DateTimeResolution\";\n  /** An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml) */\n  timex: string;\n  /** The DateTime SubKind */\n  dateTimeSubKind: DateTimeSubKind;\n  /** The actual time that the extracted text denote. */\n  value: string;\n  /** An optional modifier of a date/time instance. */\n  modifier?: TemporalModifier;\n}\n\n/** A resolution for numeric entity instances. */\nexport interface NumberResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"NumberResolution\";\n  /** The type of the extracted number entity. */\n  numberKind: NumberKind;\n  /** A numeric representation of what the extracted text denotes. */\n  value: number;\n}\n\n/** A resolution for ordinal numbers entity instances. */\nexport interface OrdinalResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"OrdinalResolution\";\n  /** The offset With respect to the reference (e.g., offset = -1 in \"show me the second to last\" */\n  offset: string;\n  /** The reference point that the ordinal number denotes. */\n  relativeTo: RelativeTo;\n  /** A simple arithmetic expression that the ordinal denotes. */\n  value: string;\n}\n\n/** represents the resolution of a date and/or time span. */\nexport interface TemporalSpanResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"TemporalSpanResolution\";\n  /** An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml) */\n  begin?: string;\n  /** An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml) */\n  end?: string;\n  /** An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations) */\n  duration?: string;\n  /** An optional modifier of a date/time instance. */\n  modifier?: TemporalModifier;\n  /** An optional triplet containing the beginning, the end, and the duration all stated as ISO 8601 formatted strings. */\n  timex?: string;\n}\n\n/** represents the resolution of numeric intervals. */\nexport interface NumericRangeResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"NumericRangeResolution\";\n  /** The kind of range that the resolution object represents. */\n  rangeKind: RangeKind;\n  /** The beginning value of  the interval. */\n  minimum: number;\n  /** The ending value of the interval. */\n  maximum: number;\n}\n\n/** An entity with resolution. */\nexport interface EntityWithResolution extends Entity {\n  /** The collection of entity resolution objects. */\n  resolutions?: BaseResolutionUnion[];\n}\n\nexport interface EntitiesDocumentResult extends DocumentResult {\n  /** Recognized entities in the document. */\n  entities: EntityWithResolution[];\n}\n\nexport interface ClassificationDocumentResult extends DocumentResult {\n  classifications: ClassificationCategory[];\n}\n\nexport interface DynamicClassificationDocumentResult extends DocumentResult {\n  classifications: ClassificationCategory[];\n}\n\nexport interface HealthcareEntitiesDocumentResult extends DocumentResult {\n  /** Healthcare entities. */\n  entities: HealthcareEntity[];\n  /** Healthcare entity relations. */\n  relations: HealthcareRelation[];\n  /** JSON bundle containing a FHIR compatible object for consumption in other Healthcare tools. For additional information see https://www.hl7.org/fhir/overview.html. */\n  fhirBundle?: { [propertyName: string]: any };\n}\n\nexport interface SentimentDocumentResult extends DocumentResult {\n  /** Predicted sentiment for document (Negative, Neutral, Positive, or Mixed). */\n  sentiment: DocumentSentimentLabel;\n  /** Document level sentiment confidence scores between 0 and 1 for each sentiment class. */\n  confidenceScores: SentimentConfidenceScores;\n  /** Sentence level sentiment analysis. */\n  sentences: SentenceSentiment[];\n}\n\nexport interface LinkedEntitiesDocumentResult extends DocumentResult {\n  /** Recognized well known entities in the document. */\n  entities: LinkedEntity[];\n}\n\nexport interface PiiEntitiesDocumentResult extends DocumentResult {\n  /** Returns redacted text. */\n  redactedText: string;\n  /** Recognized entities in the document. */\n  entities: Entity[];\n}\n\nexport interface ExtractedSummaryDocumentResult extends DocumentResult {\n  /** A ranked list of sentences representing the extracted summary. */\n  sentences: SummarySentence[];\n}\n\nexport interface KeyPhrasesDocumentResult extends DocumentResult {\n  /** A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document. */\n  keyPhrases: string[];\n}\n\nexport interface LanguageDetectionDocumentResult extends DocumentResult {\n  /** Detected Language. */\n  detectedLanguage: DetectedLanguage;\n}\n\n/** An object representing the summarization result of a single document. */\nexport interface AbstractiveSummaryDocumentResult extends DocumentResult {\n  /** A list of abstractive summaries. */\n  summaries: AbstractiveSummary[];\n}\n\nexport interface CustomEntitiesResultDocumentsItem\n  extends EntitiesDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface CustomLabelClassificationResultDocumentsItem\n  extends ClassificationDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface SentimentResponseDocumentsItem\n  extends SentimentDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface EntitiesResultWithDetectedLanguage\n  extends EntitiesDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface EntityLinkingResultWithDetectedLanguage\n  extends LinkedEntitiesDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface PIIResultWithDetectedLanguage\n  extends PiiEntitiesDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface ExtractedSummaryDocumentResultWithDetectedLanguage\n  extends ExtractedSummaryDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface KeyPhraseResultDocumentsItem\n  extends KeyPhrasesDocumentResult,\n    DocumentDetectedLanguage {}\n\n/** An object representing the summarization result of a single document with detected language. */\nexport interface AbstractiveSummaryDocumentResultWithDetectedLanguage\n  extends AbstractiveSummaryDocumentResult,\n    DocumentDetectedLanguage {}\n\nexport interface HealthcareEntitiesDocumentResultWithDocumentDetectedLanguage\n  extends HealthcareEntitiesDocumentResult,\n    DocumentDetectedLanguageString {}\n\nexport interface HealthcareResult extends PreBuiltResult {\n  documents: HealthcareEntitiesDocumentResultWithDocumentDetectedLanguage[];\n}\n\nexport interface SentimentResponse extends PreBuiltResult {\n  /** Sentiment analysis per document. */\n  documents: SentimentResponseDocumentsItem[];\n}\n\nexport interface EntitiesResult extends PreBuiltResult {\n  /** Response by document */\n  documents: EntitiesResultWithDetectedLanguage[];\n}\n\nexport interface EntityLinkingResult extends PreBuiltResult {\n  /** Response by document */\n  documents: EntityLinkingResultWithDetectedLanguage[];\n}\n\nexport interface PiiResult extends PreBuiltResult {\n  /** Response by document */\n  documents: PIIResultWithDetectedLanguage[];\n}\n\nexport interface ExtractiveSummarizationResult extends PreBuiltResult {\n  /** Response by document */\n  documents: ExtractedSummaryDocumentResultWithDetectedLanguage[];\n}\n\nexport interface KeyPhraseResult extends PreBuiltResult {\n  /** Response by document */\n  documents: KeyPhraseResultDocumentsItem[];\n}\n\nexport interface LanguageDetectionResult extends PreBuiltResult {\n  /** Response by document */\n  documents: LanguageDetectionDocumentResult[];\n}\n\nexport interface DynamicClassificationResult extends PreBuiltResult {\n  /** Response by document */\n  documents: DynamicClassificationResultDocumentsItem[];\n}\n\n/** An object representing the pre-build summarization results of each document. */\nexport interface AbstractiveSummarizationResult\n  extends AbstractiveSummarizationResultBase,\n    PreBuiltResult {}\n\n/** Supported parameters for the pre-build Abstractive Summarization task. */\nexport interface AbstractiveSummarizationAction\n  extends AbstractiveSummarizationTaskParametersBase,\n    ActionPrebuilt {}\n\n/** Use custom models to ease the process of information extraction from unstructured documents like contracts or financial documents */\nexport interface CustomEntitiesLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CustomEntityRecognition\";\n  /** Supported parameters for a Custom Entities task. */\n  parameters?: CustomEntityRecognitionAction;\n}\n\n/** Use custom models to classify text into single label taxonomy */\nexport interface CustomSingleLabelClassificationLROTask\n  extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CustomSingleLabelClassification\";\n  /** Options for a single-label classification custom action */\n  parameters?: CustomSingleLabelClassificationAction;\n}\n\n/** Use custom models to classify text into multi label taxonomy */\nexport interface CustomMultiLabelClassificationLROTask\n  extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CustomMultiLabelClassification\";\n  /** Options for a multi-label classification custom action */\n  parameters?: CustomMultiLabelClassificationAction;\n}\n\nexport interface HealthcareLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Healthcare\";\n  /** Supported parameters for a Healthcare task. */\n  parameters?: HealthcareAction;\n}\n\n/** An object representing the task definition for a Sentiment Analysis task. */\nexport interface SentimentAnalysisLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"SentimentAnalysis\";\n  /** Options for a sentiment analysis action. */\n  parameters?: SentimentAnalysisAction;\n}\n\n/** An object representing the task definition for an Entities Recognition task. */\nexport interface EntitiesLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityRecognition\";\n  /** Options for an entity recognition action. */\n  parameters?: EntityRecognitionAction;\n}\n\n/** An object representing the task definition for an Entity Linking task. */\nexport interface EntityLinkingLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityLinking\";\n  /** Options for an entity linking action. */\n  parameters?: EntityLinkingAction;\n}\n\n/** An object representing the task definition for a PII Entities Recognition task. */\nexport interface PiiLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"PiiEntityRecognition\";\n  /** Options for a Pii entity recognition action. */\n  parameters?: PiiEntityRecognitionAction;\n}\n\n/** An object representing the task definition for an Extractive Summarization task. */\nexport interface ExtractiveSummarizationLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"ExtractiveSummarization\";\n  /** Supported parameters for an Extractive Summarization task. */\n  parameters?: ExtractiveSummarizationAction;\n}\n\n/** An object representing the task definition for a Key Phrase Extraction task. */\nexport interface KeyPhraseLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"KeyPhraseExtraction\";\n  /** Options for a key phrase recognition action. */\n  parameters?: KeyPhraseExtractionAction;\n}\n\n/** An object representing the task definition for an Abstractive Summarization task. */\nexport interface AbstractiveSummarizationLROTask extends AnalyzeBatchAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"AbstractiveSummarization\";\n  /** Supported parameters for the pre-build Abstractive Summarization task. */\n  parameters: AbstractiveSummarizationAction;\n}\n\nexport interface EntityRecognitionLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityRecognitionLROResults\";\n  results: EntitiesResult;\n}\n\nexport interface CustomEntityRecognitionLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CustomEntityRecognitionLROResults\";\n  results: CustomEntitiesResult;\n}\n\nexport interface CustomSingleLabelClassificationLROResult\n  extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CustomSingleLabelClassificationLROResults\";\n  results: CustomLabelClassificationResult;\n}\n\nexport interface CustomMultiLabelClassificationLROResult\n  extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CustomMultiLabelClassificationLROResults\";\n  results: CustomLabelClassificationResult;\n}\n\nexport interface EntityLinkingLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"EntityLinkingLROResults\";\n  results: EntityLinkingResult;\n}\n\nexport interface PiiEntityRecognitionLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"PiiEntityRecognitionLROResults\";\n  results: PiiResult;\n}\n\nexport interface ExtractiveSummarizationLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"ExtractiveSummarizationLROResults\";\n  results: ExtractiveSummarizationResult;\n}\n\nexport interface HealthcareLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"HealthcareLROResults\";\n  results: HealthcareResult;\n}\n\nexport interface SentimentLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"SentimentAnalysisLROResults\";\n  results: SentimentResponse;\n}\n\nexport interface KeyPhraseExtractionLROResult extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"KeyPhraseExtractionLROResults\";\n  results: KeyPhraseResult;\n}\n\n/** An object representing the results for an Abstractive Summarization task. */\nexport interface AbstractiveSummarizationLROResult\n  extends AnalyzeTextLROResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"AbstractiveSummarizationLROResults\";\n  /** An object representing the pre-build summarization results of each document. */\n  results: AbstractiveSummarizationResult;\n}\n\n/** Options for an entity linking action. */\nexport interface EntityLinkingAction extends ActionPrebuilt {\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Options for an entity recognition action. */\nexport interface EntityRecognitionAction extends ActionPrebuilt {\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Options for a key phrase recognition action. */\nexport interface KeyPhraseExtractionAction extends ActionPrebuilt {}\n\n/** Options for a Pii entity recognition action. */\nexport interface PiiEntityRecognitionAction extends ActionPrebuilt {\n  /**\n   * Filters entities to ones only included in the specified domain (e.g., if set to `Phi`, only entities in the Protected Healthcare Information domain will be returned). For a list of possible domains, see {@link KnownPiiEntityDomain}.\n   *\n   * See {@link https://aka.ms/tanerpii the service documentation} for more information.\n   */\n  domainFilter?: PiiEntityDomain;\n  /** Filters entities to ones only included in the specified array of categories. For a list of possible categories, see {@link KnownPiiCategory} */\n  categoriesFilter?: PiiEntityCategory[];\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Options for a language detection action. */\nexport interface LanguageDetectionAction extends ActionPrebuilt {}\n\n/** Options for a sentiment analysis action. */\nexport interface SentimentAnalysisAction extends ActionPrebuilt {\n  /** Enables performing opinion mining on the input documents, a more  granular analysis around the aspects of a product or service (also known as aspect-based sentiment analysis). If set to true, {@link SentenceSentiment.opinions} will contain the results of this analysis. See {@link https://docs.microsoft.com/azure/cognitive-services/language-service/sentiment-opinion-mining/overview#opinion-mining the service documentation} for more information. */\n  includeOpinionMining?: boolean;\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Options for a dynamic classification action. */\nexport interface DynamicClassificationAction extends ActionPrebuilt {\n  /** Specifies either one or multiple categories per document. Defaults to multi classification which may return more than one class for each document. */\n  classificationType?: ClassificationType;\n  /** a list of categories to which input is classified to. */\n  categories: string[];\n}\n\n/** Supported parameters for a Healthcare task. */\nexport interface HealthcareAction extends ActionPrebuilt {\n  /** The FHIR Spec version that the result will use to format the fhirBundle. For additional information see https://www.hl7.org/fhir/overview.html. */\n  fhirVersion?: FhirVersion;\n  /** Document type that can be provided as input for Fhir Documents. Expect to have fhirVersion provided when used. Behavior of using None enum is the same as not using the documentType parameter. */\n  documentType?: HealthcareDocumentType;\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Supported parameters for an Extractive Summarization task. */\nexport interface ExtractiveSummarizationAction extends ActionPrebuilt {\n  /** The max number of sentences to be part of the summary. */\n  maxSentenceCount?: number;\n  /** The sorting criteria to use for the results of Extractive Summarization. */\n  orderBy?: ExtractiveSummarizationOrderingCriteria;\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Supported parameters for a Custom Entities task. */\nexport interface CustomEntityRecognitionAction extends ActionCustom {\n  /**\n   * Specifies the measurement unit used to calculate the offset and length properties. For a list of possible values, see {@link KnownStringIndexType}.\n   *\n   * The default is the JavaScript's default which is \"Utf16CodeUnit\".\n   */\n  stringIndexType?: StringIndexType;\n}\n\n/** Options for a single-label classification custom action */\nexport interface CustomSingleLabelClassificationAction extends ActionCustom {}\n\n/** Options for a multi-label classification custom action */\nexport interface CustomMultiLabelClassificationAction extends ActionCustom {}\n\nexport interface DynamicClassificationResultDocumentsItem\n  extends DynamicClassificationDocumentResult {}\n\n/** Defines headers for GeneratedClient_analyzeBatch operation. */\nexport interface GeneratedClientAnalyzeBatchHeaders {\n  operationLocation?: string;\n}\n\n/** Defines headers for AnalyzeText_cancelJob operation. */\nexport interface AnalyzeTextCancelJobHeaders {\n  operationLocation?: string;\n}\n\n/** Known values of {@link AnalyzeTextTaskKind} that the service accepts. */\nexport enum KnownAnalyzeTextTaskKind {\n  /** SentimentAnalysis */\n  SentimentAnalysis = \"SentimentAnalysis\",\n  /** EntityRecognition */\n  EntityRecognition = \"EntityRecognition\",\n  /** PiiEntityRecognition */\n  PiiEntityRecognition = \"PiiEntityRecognition\",\n  /** KeyPhraseExtraction */\n  KeyPhraseExtraction = \"KeyPhraseExtraction\",\n  /** LanguageDetection */\n  LanguageDetection = \"LanguageDetection\",\n  /** EntityLinking */\n  EntityLinking = \"EntityLinking\",\n  /** DynamicClassification */\n  DynamicClassification = \"DynamicClassification\"\n}\n\n/**\n * Defines values for AnalyzeTextTaskKind. \\\n * {@link KnownAnalyzeTextTaskKind} can be used interchangeably with AnalyzeTextTaskKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SentimentAnalysis** \\\n * **EntityRecognition** \\\n * **PiiEntityRecognition** \\\n * **KeyPhraseExtraction** \\\n * **LanguageDetection** \\\n * **EntityLinking** \\\n * **DynamicClassification**\n */\nexport type AnalyzeTextTaskKind = string;\n\n/** Known values of {@link AnalyzeTextTaskResultsKind} that the service accepts. */\nexport enum KnownAnalyzeTextTaskResultsKind {\n  /** SentimentAnalysisResults */\n  SentimentAnalysisResults = \"SentimentAnalysisResults\",\n  /** EntityRecognitionResults */\n  EntityRecognitionResults = \"EntityRecognitionResults\",\n  /** PiiEntityRecognitionResults */\n  PiiEntityRecognitionResults = \"PiiEntityRecognitionResults\",\n  /** KeyPhraseExtractionResults */\n  KeyPhraseExtractionResults = \"KeyPhraseExtractionResults\",\n  /** LanguageDetectionResults */\n  LanguageDetectionResults = \"LanguageDetectionResults\",\n  /** EntityLinkingResults */\n  EntityLinkingResults = \"EntityLinkingResults\",\n  /** DynamicClassificationResults */\n  DynamicClassificationResults = \"DynamicClassificationResults\"\n}\n\n/**\n * Defines values for AnalyzeTextTaskResultsKind. \\\n * {@link KnownAnalyzeTextTaskResultsKind} can be used interchangeably with AnalyzeTextTaskResultsKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SentimentAnalysisResults** \\\n * **EntityRecognitionResults** \\\n * **PiiEntityRecognitionResults** \\\n * **KeyPhraseExtractionResults** \\\n * **LanguageDetectionResults** \\\n * **EntityLinkingResults** \\\n * **DynamicClassificationResults**\n */\nexport type AnalyzeTextTaskResultsKind = string;\n\n/** Known values of {@link ErrorCode} that the service accepts. */\nexport enum KnownErrorCode {\n  /** InvalidRequest */\n  InvalidRequest = \"InvalidRequest\",\n  /** InvalidArgument */\n  InvalidArgument = \"InvalidArgument\",\n  /** Unauthorized */\n  Unauthorized = \"Unauthorized\",\n  /** Forbidden */\n  Forbidden = \"Forbidden\",\n  /** NotFound */\n  NotFound = \"NotFound\",\n  /** ProjectNotFound */\n  ProjectNotFound = \"ProjectNotFound\",\n  /** OperationNotFound */\n  OperationNotFound = \"OperationNotFound\",\n  /** AzureCognitiveSearchNotFound */\n  AzureCognitiveSearchNotFound = \"AzureCognitiveSearchNotFound\",\n  /** AzureCognitiveSearchIndexNotFound */\n  AzureCognitiveSearchIndexNotFound = \"AzureCognitiveSearchIndexNotFound\",\n  /** TooManyRequests */\n  TooManyRequests = \"TooManyRequests\",\n  /** AzureCognitiveSearchThrottling */\n  AzureCognitiveSearchThrottling = \"AzureCognitiveSearchThrottling\",\n  /** AzureCognitiveSearchIndexLimitReached */\n  AzureCognitiveSearchIndexLimitReached = \"AzureCognitiveSearchIndexLimitReached\",\n  /** InternalServerError */\n  InternalServerError = \"InternalServerError\",\n  /** ServiceUnavailable */\n  ServiceUnavailable = \"ServiceUnavailable\",\n  /** Timeout */\n  Timeout = \"Timeout\",\n  /** QuotaExceeded */\n  QuotaExceeded = \"QuotaExceeded\",\n  /** Conflict */\n  Conflict = \"Conflict\",\n  /** Warning */\n  Warning = \"Warning\"\n}\n\n/**\n * Defines values for ErrorCode. \\\n * {@link KnownErrorCode} can be used interchangeably with ErrorCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InvalidRequest** \\\n * **InvalidArgument** \\\n * **Unauthorized** \\\n * **Forbidden** \\\n * **NotFound** \\\n * **ProjectNotFound** \\\n * **OperationNotFound** \\\n * **AzureCognitiveSearchNotFound** \\\n * **AzureCognitiveSearchIndexNotFound** \\\n * **TooManyRequests** \\\n * **AzureCognitiveSearchThrottling** \\\n * **AzureCognitiveSearchIndexLimitReached** \\\n * **InternalServerError** \\\n * **ServiceUnavailable** \\\n * **Timeout** \\\n * **QuotaExceeded** \\\n * **Conflict** \\\n * **Warning**\n */\nexport type ErrorCode = string;\n\n/** Known values of {@link InnerErrorCode} that the service accepts. */\nexport enum KnownInnerErrorCode {\n  /** InvalidRequest */\n  InvalidRequest = \"InvalidRequest\",\n  /** InvalidParameterValue */\n  InvalidParameterValue = \"InvalidParameterValue\",\n  /** KnowledgeBaseNotFound */\n  KnowledgeBaseNotFound = \"KnowledgeBaseNotFound\",\n  /** AzureCognitiveSearchNotFound */\n  AzureCognitiveSearchNotFound = \"AzureCognitiveSearchNotFound\",\n  /** AzureCognitiveSearchThrottling */\n  AzureCognitiveSearchThrottling = \"AzureCognitiveSearchThrottling\",\n  /** ExtractionFailure */\n  ExtractionFailure = \"ExtractionFailure\",\n  /** InvalidRequestBodyFormat */\n  InvalidRequestBodyFormat = \"InvalidRequestBodyFormat\",\n  /** EmptyRequest */\n  EmptyRequest = \"EmptyRequest\",\n  /** MissingInputDocuments */\n  MissingInputDocuments = \"MissingInputDocuments\",\n  /** InvalidDocument */\n  InvalidDocument = \"InvalidDocument\",\n  /** ModelVersionIncorrect */\n  ModelVersionIncorrect = \"ModelVersionIncorrect\",\n  /** InvalidDocumentBatch */\n  InvalidDocumentBatch = \"InvalidDocumentBatch\",\n  /** UnsupportedLanguageCode */\n  UnsupportedLanguageCode = \"UnsupportedLanguageCode\",\n  /** InvalidCountryHint */\n  InvalidCountryHint = \"InvalidCountryHint\"\n}\n\n/**\n * Defines values for InnerErrorCode. \\\n * {@link KnownInnerErrorCode} can be used interchangeably with InnerErrorCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InvalidRequest** \\\n * **InvalidParameterValue** \\\n * **KnowledgeBaseNotFound** \\\n * **AzureCognitiveSearchNotFound** \\\n * **AzureCognitiveSearchThrottling** \\\n * **ExtractionFailure** \\\n * **InvalidRequestBodyFormat** \\\n * **EmptyRequest** \\\n * **MissingInputDocuments** \\\n * **InvalidDocument** \\\n * **ModelVersionIncorrect** \\\n * **InvalidDocumentBatch** \\\n * **UnsupportedLanguageCode** \\\n * **InvalidCountryHint**\n */\nexport type InnerErrorCode = string;\n\n/** Known values of {@link AnalyzeTextLROTaskKind} that the service accepts. */\nexport enum KnownAnalyzeTextLROTaskKind {\n  /** SentimentAnalysis */\n  SentimentAnalysis = \"SentimentAnalysis\",\n  /** EntityRecognition */\n  EntityRecognition = \"EntityRecognition\",\n  /** PiiEntityRecognition */\n  PiiEntityRecognition = \"PiiEntityRecognition\",\n  /** KeyPhraseExtraction */\n  KeyPhraseExtraction = \"KeyPhraseExtraction\",\n  /** EntityLinking */\n  EntityLinking = \"EntityLinking\",\n  /** Healthcare */\n  Healthcare = \"Healthcare\",\n  /** ExtractiveSummarization */\n  ExtractiveSummarization = \"ExtractiveSummarization\",\n  /** CustomEntityRecognition */\n  CustomEntityRecognition = \"CustomEntityRecognition\",\n  /** CustomSingleLabelClassification */\n  CustomSingleLabelClassification = \"CustomSingleLabelClassification\",\n  /** CustomMultiLabelClassification */\n  CustomMultiLabelClassification = \"CustomMultiLabelClassification\",\n  /** AbstractiveSummarization */\n  AbstractiveSummarization = \"AbstractiveSummarization\"\n}\n\n/**\n * Defines values for AnalyzeTextLROTaskKind. \\\n * {@link KnownAnalyzeTextLROTaskKind} can be used interchangeably with AnalyzeTextLROTaskKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SentimentAnalysis** \\\n * **EntityRecognition** \\\n * **PiiEntityRecognition** \\\n * **KeyPhraseExtraction** \\\n * **EntityLinking** \\\n * **Healthcare** \\\n * **ExtractiveSummarization** \\\n * **CustomEntityRecognition** \\\n * **CustomSingleLabelClassification** \\\n * **CustomMultiLabelClassification** \\\n * **AbstractiveSummarization**\n */\nexport type AnalyzeTextLROTaskKind = string;\n\n/** Known values of {@link OperationStatus} that the service accepts. */\nexport enum KnownOperationStatus {\n  /** NotStarted */\n  NotStarted = \"notStarted\",\n  /** Running */\n  Running = \"running\",\n  /** Succeeded */\n  Succeeded = \"succeeded\",\n  /** PartiallyCompleted */\n  PartiallyCompleted = \"partiallyCompleted\",\n  /** Failed */\n  Failed = \"failed\",\n  /** Cancelled */\n  Cancelled = \"cancelled\",\n  /** Cancelling */\n  Cancelling = \"cancelling\"\n}\n\n/**\n * Defines values for OperationStatus. \\\n * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **notStarted** \\\n * **running** \\\n * **succeeded** \\\n * **partiallyCompleted** \\\n * **failed** \\\n * **cancelled** \\\n * **cancelling**\n */\nexport type OperationStatus = string;\n\n/** Known values of {@link AnalyzeTextLROResultsKind} that the service accepts. */\nexport enum KnownAnalyzeTextLROResultsKind {\n  /** SentimentAnalysisLROResults */\n  SentimentAnalysisLROResults = \"SentimentAnalysisLROResults\",\n  /** EntityRecognitionLROResults */\n  EntityRecognitionLROResults = \"EntityRecognitionLROResults\",\n  /** PiiEntityRecognitionLROResults */\n  PiiEntityRecognitionLROResults = \"PiiEntityRecognitionLROResults\",\n  /** KeyPhraseExtractionLROResults */\n  KeyPhraseExtractionLROResults = \"KeyPhraseExtractionLROResults\",\n  /** EntityLinkingLROResults */\n  EntityLinkingLROResults = \"EntityLinkingLROResults\",\n  /** HealthcareLROResults */\n  HealthcareLROResults = \"HealthcareLROResults\",\n  /** ExtractiveSummarizationLROResults */\n  ExtractiveSummarizationLROResults = \"ExtractiveSummarizationLROResults\",\n  /** CustomEntityRecognitionLROResults */\n  CustomEntityRecognitionLROResults = \"CustomEntityRecognitionLROResults\",\n  /** CustomSingleLabelClassificationLROResults */\n  CustomSingleLabelClassificationLROResults = \"CustomSingleLabelClassificationLROResults\",\n  /** CustomMultiLabelClassificationLROResults */\n  CustomMultiLabelClassificationLROResults = \"CustomMultiLabelClassificationLROResults\",\n  /** AbstractiveSummarizationLROResults */\n  AbstractiveSummarizationLROResults = \"AbstractiveSummarizationLROResults\"\n}\n\n/**\n * Defines values for AnalyzeTextLROResultsKind. \\\n * {@link KnownAnalyzeTextLROResultsKind} can be used interchangeably with AnalyzeTextLROResultsKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SentimentAnalysisLROResults** \\\n * **EntityRecognitionLROResults** \\\n * **PiiEntityRecognitionLROResults** \\\n * **KeyPhraseExtractionLROResults** \\\n * **EntityLinkingLROResults** \\\n * **HealthcareLROResults** \\\n * **ExtractiveSummarizationLROResults** \\\n * **CustomEntityRecognitionLROResults** \\\n * **CustomSingleLabelClassificationLROResults** \\\n * **CustomMultiLabelClassificationLROResults** \\\n * **AbstractiveSummarizationLROResults**\n */\nexport type AnalyzeTextLROResultsKind = string;\n\n/** Known values of {@link State} that the service accepts. */\nexport enum KnownState {\n  /** NotStarted */\n  NotStarted = \"notStarted\",\n  /** Running */\n  Running = \"running\",\n  /** Succeeded */\n  Succeeded = \"succeeded\",\n  /** Failed */\n  Failed = \"failed\",\n  /** Cancelled */\n  Cancelled = \"cancelled\",\n  /** Cancelling */\n  Cancelling = \"cancelling\"\n}\n\n/**\n * Defines values for State. \\\n * {@link KnownState} can be used interchangeably with State,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **notStarted** \\\n * **running** \\\n * **succeeded** \\\n * **failed** \\\n * **cancelled** \\\n * **cancelling**\n */\nexport type State = string;\n\n/** Known values of {@link StringIndexType} that the service accepts. */\nexport enum KnownStringIndexType {\n  /** Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. */\n  TextElementsV8 = \"TextElements_v8\",\n  /** Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. */\n  UnicodeCodePoint = \"UnicodeCodePoint\",\n  /** Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript. */\n  Utf16CodeUnit = \"Utf16CodeUnit\"\n}\n\n/**\n * Defines values for StringIndexType. \\\n * {@link KnownStringIndexType} can be used interchangeably with StringIndexType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TextElements_v8**: Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. \\\n * **UnicodeCodePoint**: Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. \\\n * **Utf16CodeUnit**: Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.\n */\nexport type StringIndexType = string;\n\n/** Known values of {@link PiiEntityDomain} that the service accepts. */\nexport enum KnownPiiEntityDomain {\n  /** Indicates that entities in the Personal Health Information domain should be redacted. */\n  Phi = \"phi\",\n  /** Indicates that no domain is specified. */\n  None = \"none\"\n}\n\n/**\n * Defines values for PiiEntityDomain. \\\n * {@link KnownPiiEntityDomain} can be used interchangeably with PiiEntityDomain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **phi**: Indicates that entities in the Personal Health Information domain should be redacted. \\\n * **none**: Indicates that no domain is specified.\n */\nexport type PiiEntityDomain = string;\n\n/** Known values of {@link PiiEntityCategory} that the service accepts. */\nexport enum KnownPiiEntityCategory {\n  /** ABARoutingNumber */\n  ABARoutingNumber = \"ABARoutingNumber\",\n  /** ARNationalIdentityNumber */\n  ARNationalIdentityNumber = \"ARNationalIdentityNumber\",\n  /** AUBankAccountNumber */\n  AUBankAccountNumber = \"AUBankAccountNumber\",\n  /** AUDriversLicenseNumber */\n  AUDriversLicenseNumber = \"AUDriversLicenseNumber\",\n  /** AUMedicalAccountNumber */\n  AUMedicalAccountNumber = \"AUMedicalAccountNumber\",\n  /** AUPassportNumber */\n  AUPassportNumber = \"AUPassportNumber\",\n  /** AUTaxFileNumber */\n  AUTaxFileNumber = \"AUTaxFileNumber\",\n  /** AUBusinessNumber */\n  AUBusinessNumber = \"AUBusinessNumber\",\n  /** AUCompanyNumber */\n  AUCompanyNumber = \"AUCompanyNumber\",\n  /** ATIdentityCard */\n  ATIdentityCard = \"ATIdentityCard\",\n  /** ATTaxIdentificationNumber */\n  ATTaxIdentificationNumber = \"ATTaxIdentificationNumber\",\n  /** ATValueAddedTaxNumber */\n  ATValueAddedTaxNumber = \"ATValueAddedTaxNumber\",\n  /** AzureDocumentDBAuthKey */\n  AzureDocumentDBAuthKey = \"AzureDocumentDBAuthKey\",\n  /** AzureIaasDatabaseConnectionAndSQLString */\n  AzureIaasDatabaseConnectionAndSQLString = \"AzureIAASDatabaseConnectionAndSQLString\",\n  /** AzureIoTConnectionString */\n  AzureIoTConnectionString = \"AzureIoTConnectionString\",\n  /** AzurePublishSettingPassword */\n  AzurePublishSettingPassword = \"AzurePublishSettingPassword\",\n  /** AzureRedisCacheString */\n  AzureRedisCacheString = \"AzureRedisCacheString\",\n  /** AzureSAS */\n  AzureSAS = \"AzureSAS\",\n  /** AzureServiceBusString */\n  AzureServiceBusString = \"AzureServiceBusString\",\n  /** AzureStorageAccountKey */\n  AzureStorageAccountKey = \"AzureStorageAccountKey\",\n  /** AzureStorageAccountGeneric */\n  AzureStorageAccountGeneric = \"AzureStorageAccountGeneric\",\n  /** BENationalNumber */\n  BENationalNumber = \"BENationalNumber\",\n  /** BENationalNumberV2 */\n  BENationalNumberV2 = \"BENationalNumberV2\",\n  /** BEValueAddedTaxNumber */\n  BEValueAddedTaxNumber = \"BEValueAddedTaxNumber\",\n  /** BrcpfNumber */\n  BrcpfNumber = \"BRCPFNumber\",\n  /** BRLegalEntityNumber */\n  BRLegalEntityNumber = \"BRLegalEntityNumber\",\n  /** BRNationalIdrg */\n  BRNationalIdrg = \"BRNationalIDRG\",\n  /** BGUniformCivilNumber */\n  BGUniformCivilNumber = \"BGUniformCivilNumber\",\n  /** CABankAccountNumber */\n  CABankAccountNumber = \"CABankAccountNumber\",\n  /** CADriversLicenseNumber */\n  CADriversLicenseNumber = \"CADriversLicenseNumber\",\n  /** CAHealthServiceNumber */\n  CAHealthServiceNumber = \"CAHealthServiceNumber\",\n  /** CAPassportNumber */\n  CAPassportNumber = \"CAPassportNumber\",\n  /** CAPersonalHealthIdentification */\n  CAPersonalHealthIdentification = \"CAPersonalHealthIdentification\",\n  /** CASocialInsuranceNumber */\n  CASocialInsuranceNumber = \"CASocialInsuranceNumber\",\n  /** CLIdentityCardNumber */\n  CLIdentityCardNumber = \"CLIdentityCardNumber\",\n  /** CNResidentIdentityCardNumber */\n  CNResidentIdentityCardNumber = \"CNResidentIdentityCardNumber\",\n  /** CreditCardNumber */\n  CreditCardNumber = \"CreditCardNumber\",\n  /** HRIdentityCardNumber */\n  HRIdentityCardNumber = \"HRIdentityCardNumber\",\n  /** HRNationalIDNumber */\n  HRNationalIDNumber = \"HRNationalIDNumber\",\n  /** HRPersonalIdentificationNumber */\n  HRPersonalIdentificationNumber = \"HRPersonalIdentificationNumber\",\n  /** HRPersonalIdentificationOIBNumberV2 */\n  HRPersonalIdentificationOIBNumberV2 = \"HRPersonalIdentificationOIBNumberV2\",\n  /** CYIdentityCard */\n  CYIdentityCard = \"CYIdentityCard\",\n  /** CYTaxIdentificationNumber */\n  CYTaxIdentificationNumber = \"CYTaxIdentificationNumber\",\n  /** CZPersonalIdentityNumber */\n  CZPersonalIdentityNumber = \"CZPersonalIdentityNumber\",\n  /** CZPersonalIdentityV2 */\n  CZPersonalIdentityV2 = \"CZPersonalIdentityV2\",\n  /** DKPersonalIdentificationNumber */\n  DKPersonalIdentificationNumber = \"DKPersonalIdentificationNumber\",\n  /** DKPersonalIdentificationV2 */\n  DKPersonalIdentificationV2 = \"DKPersonalIdentificationV2\",\n  /** DrugEnforcementAgencyNumber */\n  DrugEnforcementAgencyNumber = \"DrugEnforcementAgencyNumber\",\n  /** EEPersonalIdentificationCode */\n  EEPersonalIdentificationCode = \"EEPersonalIdentificationCode\",\n  /** EUDebitCardNumber */\n  EUDebitCardNumber = \"EUDebitCardNumber\",\n  /** EUDriversLicenseNumber */\n  EUDriversLicenseNumber = \"EUDriversLicenseNumber\",\n  /** EugpsCoordinates */\n  EugpsCoordinates = \"EUGPSCoordinates\",\n  /** EUNationalIdentificationNumber */\n  EUNationalIdentificationNumber = \"EUNationalIdentificationNumber\",\n  /** EUPassportNumber */\n  EUPassportNumber = \"EUPassportNumber\",\n  /** EUSocialSecurityNumber */\n  EUSocialSecurityNumber = \"EUSocialSecurityNumber\",\n  /** EUTaxIdentificationNumber */\n  EUTaxIdentificationNumber = \"EUTaxIdentificationNumber\",\n  /** FIEuropeanHealthNumber */\n  FIEuropeanHealthNumber = \"FIEuropeanHealthNumber\",\n  /** FINationalID */\n  FINationalID = \"FINationalID\",\n  /** FINationalIDV2 */\n  FINationalIDV2 = \"FINationalIDV2\",\n  /** FIPassportNumber */\n  FIPassportNumber = \"FIPassportNumber\",\n  /** FRDriversLicenseNumber */\n  FRDriversLicenseNumber = \"FRDriversLicenseNumber\",\n  /** FRHealthInsuranceNumber */\n  FRHealthInsuranceNumber = \"FRHealthInsuranceNumber\",\n  /** FRNationalID */\n  FRNationalID = \"FRNationalID\",\n  /** FRPassportNumber */\n  FRPassportNumber = \"FRPassportNumber\",\n  /** FRSocialSecurityNumber */\n  FRSocialSecurityNumber = \"FRSocialSecurityNumber\",\n  /** FRTaxIdentificationNumber */\n  FRTaxIdentificationNumber = \"FRTaxIdentificationNumber\",\n  /** FRValueAddedTaxNumber */\n  FRValueAddedTaxNumber = \"FRValueAddedTaxNumber\",\n  /** DEDriversLicenseNumber */\n  DEDriversLicenseNumber = \"DEDriversLicenseNumber\",\n  /** DEPassportNumber */\n  DEPassportNumber = \"DEPassportNumber\",\n  /** DEIdentityCardNumber */\n  DEIdentityCardNumber = \"DEIdentityCardNumber\",\n  /** DETaxIdentificationNumber */\n  DETaxIdentificationNumber = \"DETaxIdentificationNumber\",\n  /** DEValueAddedNumber */\n  DEValueAddedNumber = \"DEValueAddedNumber\",\n  /** GRNationalIDCard */\n  GRNationalIDCard = \"GRNationalIDCard\",\n  /** GRNationalIDV2 */\n  GRNationalIDV2 = \"GRNationalIDV2\",\n  /** GRTaxIdentificationNumber */\n  GRTaxIdentificationNumber = \"GRTaxIdentificationNumber\",\n  /** HKIdentityCardNumber */\n  HKIdentityCardNumber = \"HKIdentityCardNumber\",\n  /** HUValueAddedNumber */\n  HUValueAddedNumber = \"HUValueAddedNumber\",\n  /** HUPersonalIdentificationNumber */\n  HUPersonalIdentificationNumber = \"HUPersonalIdentificationNumber\",\n  /** HUTaxIdentificationNumber */\n  HUTaxIdentificationNumber = \"HUTaxIdentificationNumber\",\n  /** INPermanentAccount */\n  INPermanentAccount = \"INPermanentAccount\",\n  /** INUniqueIdentificationNumber */\n  INUniqueIdentificationNumber = \"INUniqueIdentificationNumber\",\n  /** IDIdentityCardNumber */\n  IDIdentityCardNumber = \"IDIdentityCardNumber\",\n  /** InternationalBankingAccountNumber */\n  InternationalBankingAccountNumber = \"InternationalBankingAccountNumber\",\n  /** IEPersonalPublicServiceNumber */\n  IEPersonalPublicServiceNumber = \"IEPersonalPublicServiceNumber\",\n  /** IEPersonalPublicServiceNumberV2 */\n  IEPersonalPublicServiceNumberV2 = \"IEPersonalPublicServiceNumberV2\",\n  /** ILBankAccountNumber */\n  ILBankAccountNumber = \"ILBankAccountNumber\",\n  /** ILNationalID */\n  ILNationalID = \"ILNationalID\",\n  /** ITDriversLicenseNumber */\n  ITDriversLicenseNumber = \"ITDriversLicenseNumber\",\n  /** ITFiscalCode */\n  ITFiscalCode = \"ITFiscalCode\",\n  /** ITValueAddedTaxNumber */\n  ITValueAddedTaxNumber = \"ITValueAddedTaxNumber\",\n  /** JPBankAccountNumber */\n  JPBankAccountNumber = \"JPBankAccountNumber\",\n  /** JPDriversLicenseNumber */\n  JPDriversLicenseNumber = \"JPDriversLicenseNumber\",\n  /** JPPassportNumber */\n  JPPassportNumber = \"JPPassportNumber\",\n  /** JPResidentRegistrationNumber */\n  JPResidentRegistrationNumber = \"JPResidentRegistrationNumber\",\n  /** JPSocialInsuranceNumber */\n  JPSocialInsuranceNumber = \"JPSocialInsuranceNumber\",\n  /** JPMyNumberCorporate */\n  JPMyNumberCorporate = \"JPMyNumberCorporate\",\n  /** JPMyNumberPersonal */\n  JPMyNumberPersonal = \"JPMyNumberPersonal\",\n  /** JPResidenceCardNumber */\n  JPResidenceCardNumber = \"JPResidenceCardNumber\",\n  /** LVPersonalCode */\n  LVPersonalCode = \"LVPersonalCode\",\n  /** LTPersonalCode */\n  LTPersonalCode = \"LTPersonalCode\",\n  /** LUNationalIdentificationNumberNatural */\n  LUNationalIdentificationNumberNatural = \"LUNationalIdentificationNumberNatural\",\n  /** LUNationalIdentificationNumberNonNatural */\n  LUNationalIdentificationNumberNonNatural = \"LUNationalIdentificationNumberNonNatural\",\n  /** MYIdentityCardNumber */\n  MYIdentityCardNumber = \"MYIdentityCardNumber\",\n  /** MTIdentityCardNumber */\n  MTIdentityCardNumber = \"MTIdentityCardNumber\",\n  /** MTTaxIDNumber */\n  MTTaxIDNumber = \"MTTaxIDNumber\",\n  /** NLCitizensServiceNumber */\n  NLCitizensServiceNumber = \"NLCitizensServiceNumber\",\n  /** NLCitizensServiceNumberV2 */\n  NLCitizensServiceNumberV2 = \"NLCitizensServiceNumberV2\",\n  /** NLTaxIdentificationNumber */\n  NLTaxIdentificationNumber = \"NLTaxIdentificationNumber\",\n  /** NLValueAddedTaxNumber */\n  NLValueAddedTaxNumber = \"NLValueAddedTaxNumber\",\n  /** NZBankAccountNumber */\n  NZBankAccountNumber = \"NZBankAccountNumber\",\n  /** NZDriversLicenseNumber */\n  NZDriversLicenseNumber = \"NZDriversLicenseNumber\",\n  /** NZInlandRevenueNumber */\n  NZInlandRevenueNumber = \"NZInlandRevenueNumber\",\n  /** NZMinistryOfHealthNumber */\n  NZMinistryOfHealthNumber = \"NZMinistryOfHealthNumber\",\n  /** NZSocialWelfareNumber */\n  NZSocialWelfareNumber = \"NZSocialWelfareNumber\",\n  /** NOIdentityNumber */\n  NOIdentityNumber = \"NOIdentityNumber\",\n  /** PHUnifiedMultiPurposeIDNumber */\n  PHUnifiedMultiPurposeIDNumber = \"PHUnifiedMultiPurposeIDNumber\",\n  /** PLIdentityCard */\n  PLIdentityCard = \"PLIdentityCard\",\n  /** PLNationalID */\n  PLNationalID = \"PLNationalID\",\n  /** PLNationalIDV2 */\n  PLNationalIDV2 = \"PLNationalIDV2\",\n  /** PLPassportNumber */\n  PLPassportNumber = \"PLPassportNumber\",\n  /** PLTaxIdentificationNumber */\n  PLTaxIdentificationNumber = \"PLTaxIdentificationNumber\",\n  /** PlregonNumber */\n  PlregonNumber = \"PLREGONNumber\",\n  /** PTCitizenCardNumber */\n  PTCitizenCardNumber = \"PTCitizenCardNumber\",\n  /** PTCitizenCardNumberV2 */\n  PTCitizenCardNumberV2 = \"PTCitizenCardNumberV2\",\n  /** PTTaxIdentificationNumber */\n  PTTaxIdentificationNumber = \"PTTaxIdentificationNumber\",\n  /** ROPersonalNumericalCode */\n  ROPersonalNumericalCode = \"ROPersonalNumericalCode\",\n  /** RUPassportNumberDomestic */\n  RUPassportNumberDomestic = \"RUPassportNumberDomestic\",\n  /** RUPassportNumberInternational */\n  RUPassportNumberInternational = \"RUPassportNumberInternational\",\n  /** SANationalID */\n  SANationalID = \"SANationalID\",\n  /** SGNationalRegistrationIdentityCardNumber */\n  SGNationalRegistrationIdentityCardNumber = \"SGNationalRegistrationIdentityCardNumber\",\n  /** SKPersonalNumber */\n  SKPersonalNumber = \"SKPersonalNumber\",\n  /** SITaxIdentificationNumber */\n  SITaxIdentificationNumber = \"SITaxIdentificationNumber\",\n  /** SIUniqueMasterCitizenNumber */\n  SIUniqueMasterCitizenNumber = \"SIUniqueMasterCitizenNumber\",\n  /** ZAIdentificationNumber */\n  ZAIdentificationNumber = \"ZAIdentificationNumber\",\n  /** KRResidentRegistrationNumber */\n  KRResidentRegistrationNumber = \"KRResidentRegistrationNumber\",\n  /** Esdni */\n  Esdni = \"ESDNI\",\n  /** ESSocialSecurityNumber */\n  ESSocialSecurityNumber = \"ESSocialSecurityNumber\",\n  /** ESTaxIdentificationNumber */\n  ESTaxIdentificationNumber = \"ESTaxIdentificationNumber\",\n  /** SQLServerConnectionString */\n  SQLServerConnectionString = \"SQLServerConnectionString\",\n  /** SENationalID */\n  SENationalID = \"SENationalID\",\n  /** SENationalIDV2 */\n  SENationalIDV2 = \"SENationalIDV2\",\n  /** SEPassportNumber */\n  SEPassportNumber = \"SEPassportNumber\",\n  /** SETaxIdentificationNumber */\n  SETaxIdentificationNumber = \"SETaxIdentificationNumber\",\n  /** SwiftCode */\n  SwiftCode = \"SWIFTCode\",\n  /** CHSocialSecurityNumber */\n  CHSocialSecurityNumber = \"CHSocialSecurityNumber\",\n  /** TWNationalID */\n  TWNationalID = \"TWNationalID\",\n  /** TWPassportNumber */\n  TWPassportNumber = \"TWPassportNumber\",\n  /** TWResidentCertificate */\n  TWResidentCertificate = \"TWResidentCertificate\",\n  /** THPopulationIdentificationCode */\n  THPopulationIdentificationCode = \"THPopulationIdentificationCode\",\n  /** TRNationalIdentificationNumber */\n  TRNationalIdentificationNumber = \"TRNationalIdentificationNumber\",\n  /** UKDriversLicenseNumber */\n  UKDriversLicenseNumber = \"UKDriversLicenseNumber\",\n  /** UKElectoralRollNumber */\n  UKElectoralRollNumber = \"UKElectoralRollNumber\",\n  /** UKNationalHealthNumber */\n  UKNationalHealthNumber = \"UKNationalHealthNumber\",\n  /** UKNationalInsuranceNumber */\n  UKNationalInsuranceNumber = \"UKNationalInsuranceNumber\",\n  /** UKUniqueTaxpayerNumber */\n  UKUniqueTaxpayerNumber = \"UKUniqueTaxpayerNumber\",\n  /** UsukPassportNumber */\n  UsukPassportNumber = \"USUKPassportNumber\",\n  /** USBankAccountNumber */\n  USBankAccountNumber = \"USBankAccountNumber\",\n  /** USDriversLicenseNumber */\n  USDriversLicenseNumber = \"USDriversLicenseNumber\",\n  /** USIndividualTaxpayerIdentification */\n  USIndividualTaxpayerIdentification = \"USIndividualTaxpayerIdentification\",\n  /** USSocialSecurityNumber */\n  USSocialSecurityNumber = \"USSocialSecurityNumber\",\n  /** UAPassportNumberDomestic */\n  UAPassportNumberDomestic = \"UAPassportNumberDomestic\",\n  /** UAPassportNumberInternational */\n  UAPassportNumberInternational = \"UAPassportNumberInternational\",\n  /** Organization */\n  Organization = \"Organization\",\n  /** Email */\n  Email = \"Email\",\n  /** URL */\n  URL = \"URL\",\n  /** Age */\n  Age = \"Age\",\n  /** PhoneNumber */\n  PhoneNumber = \"PhoneNumber\",\n  /** IPAddress */\n  IPAddress = \"IPAddress\",\n  /** Date */\n  Date = \"Date\",\n  /** Person */\n  Person = \"Person\",\n  /** Address */\n  Address = \"Address\",\n  /** All */\n  All = \"All\",\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for PiiEntityCategory. \\\n * {@link KnownPiiEntityCategory} can be used interchangeably with PiiEntityCategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ABARoutingNumber** \\\n * **ARNationalIdentityNumber** \\\n * **AUBankAccountNumber** \\\n * **AUDriversLicenseNumber** \\\n * **AUMedicalAccountNumber** \\\n * **AUPassportNumber** \\\n * **AUTaxFileNumber** \\\n * **AUBusinessNumber** \\\n * **AUCompanyNumber** \\\n * **ATIdentityCard** \\\n * **ATTaxIdentificationNumber** \\\n * **ATValueAddedTaxNumber** \\\n * **AzureDocumentDBAuthKey** \\\n * **AzureIAASDatabaseConnectionAndSQLString** \\\n * **AzureIoTConnectionString** \\\n * **AzurePublishSettingPassword** \\\n * **AzureRedisCacheString** \\\n * **AzureSAS** \\\n * **AzureServiceBusString** \\\n * **AzureStorageAccountKey** \\\n * **AzureStorageAccountGeneric** \\\n * **BENationalNumber** \\\n * **BENationalNumberV2** \\\n * **BEValueAddedTaxNumber** \\\n * **BRCPFNumber** \\\n * **BRLegalEntityNumber** \\\n * **BRNationalIDRG** \\\n * **BGUniformCivilNumber** \\\n * **CABankAccountNumber** \\\n * **CADriversLicenseNumber** \\\n * **CAHealthServiceNumber** \\\n * **CAPassportNumber** \\\n * **CAPersonalHealthIdentification** \\\n * **CASocialInsuranceNumber** \\\n * **CLIdentityCardNumber** \\\n * **CNResidentIdentityCardNumber** \\\n * **CreditCardNumber** \\\n * **HRIdentityCardNumber** \\\n * **HRNationalIDNumber** \\\n * **HRPersonalIdentificationNumber** \\\n * **HRPersonalIdentificationOIBNumberV2** \\\n * **CYIdentityCard** \\\n * **CYTaxIdentificationNumber** \\\n * **CZPersonalIdentityNumber** \\\n * **CZPersonalIdentityV2** \\\n * **DKPersonalIdentificationNumber** \\\n * **DKPersonalIdentificationV2** \\\n * **DrugEnforcementAgencyNumber** \\\n * **EEPersonalIdentificationCode** \\\n * **EUDebitCardNumber** \\\n * **EUDriversLicenseNumber** \\\n * **EUGPSCoordinates** \\\n * **EUNationalIdentificationNumber** \\\n * **EUPassportNumber** \\\n * **EUSocialSecurityNumber** \\\n * **EUTaxIdentificationNumber** \\\n * **FIEuropeanHealthNumber** \\\n * **FINationalID** \\\n * **FINationalIDV2** \\\n * **FIPassportNumber** \\\n * **FRDriversLicenseNumber** \\\n * **FRHealthInsuranceNumber** \\\n * **FRNationalID** \\\n * **FRPassportNumber** \\\n * **FRSocialSecurityNumber** \\\n * **FRTaxIdentificationNumber** \\\n * **FRValueAddedTaxNumber** \\\n * **DEDriversLicenseNumber** \\\n * **DEPassportNumber** \\\n * **DEIdentityCardNumber** \\\n * **DETaxIdentificationNumber** \\\n * **DEValueAddedNumber** \\\n * **GRNationalIDCard** \\\n * **GRNationalIDV2** \\\n * **GRTaxIdentificationNumber** \\\n * **HKIdentityCardNumber** \\\n * **HUValueAddedNumber** \\\n * **HUPersonalIdentificationNumber** \\\n * **HUTaxIdentificationNumber** \\\n * **INPermanentAccount** \\\n * **INUniqueIdentificationNumber** \\\n * **IDIdentityCardNumber** \\\n * **InternationalBankingAccountNumber** \\\n * **IEPersonalPublicServiceNumber** \\\n * **IEPersonalPublicServiceNumberV2** \\\n * **ILBankAccountNumber** \\\n * **ILNationalID** \\\n * **ITDriversLicenseNumber** \\\n * **ITFiscalCode** \\\n * **ITValueAddedTaxNumber** \\\n * **JPBankAccountNumber** \\\n * **JPDriversLicenseNumber** \\\n * **JPPassportNumber** \\\n * **JPResidentRegistrationNumber** \\\n * **JPSocialInsuranceNumber** \\\n * **JPMyNumberCorporate** \\\n * **JPMyNumberPersonal** \\\n * **JPResidenceCardNumber** \\\n * **LVPersonalCode** \\\n * **LTPersonalCode** \\\n * **LUNationalIdentificationNumberNatural** \\\n * **LUNationalIdentificationNumberNonNatural** \\\n * **MYIdentityCardNumber** \\\n * **MTIdentityCardNumber** \\\n * **MTTaxIDNumber** \\\n * **NLCitizensServiceNumber** \\\n * **NLCitizensServiceNumberV2** \\\n * **NLTaxIdentificationNumber** \\\n * **NLValueAddedTaxNumber** \\\n * **NZBankAccountNumber** \\\n * **NZDriversLicenseNumber** \\\n * **NZInlandRevenueNumber** \\\n * **NZMinistryOfHealthNumber** \\\n * **NZSocialWelfareNumber** \\\n * **NOIdentityNumber** \\\n * **PHUnifiedMultiPurposeIDNumber** \\\n * **PLIdentityCard** \\\n * **PLNationalID** \\\n * **PLNationalIDV2** \\\n * **PLPassportNumber** \\\n * **PLTaxIdentificationNumber** \\\n * **PLREGONNumber** \\\n * **PTCitizenCardNumber** \\\n * **PTCitizenCardNumberV2** \\\n * **PTTaxIdentificationNumber** \\\n * **ROPersonalNumericalCode** \\\n * **RUPassportNumberDomestic** \\\n * **RUPassportNumberInternational** \\\n * **SANationalID** \\\n * **SGNationalRegistrationIdentityCardNumber** \\\n * **SKPersonalNumber** \\\n * **SITaxIdentificationNumber** \\\n * **SIUniqueMasterCitizenNumber** \\\n * **ZAIdentificationNumber** \\\n * **KRResidentRegistrationNumber** \\\n * **ESDNI** \\\n * **ESSocialSecurityNumber** \\\n * **ESTaxIdentificationNumber** \\\n * **SQLServerConnectionString** \\\n * **SENationalID** \\\n * **SENationalIDV2** \\\n * **SEPassportNumber** \\\n * **SETaxIdentificationNumber** \\\n * **SWIFTCode** \\\n * **CHSocialSecurityNumber** \\\n * **TWNationalID** \\\n * **TWPassportNumber** \\\n * **TWResidentCertificate** \\\n * **THPopulationIdentificationCode** \\\n * **TRNationalIdentificationNumber** \\\n * **UKDriversLicenseNumber** \\\n * **UKElectoralRollNumber** \\\n * **UKNationalHealthNumber** \\\n * **UKNationalInsuranceNumber** \\\n * **UKUniqueTaxpayerNumber** \\\n * **USUKPassportNumber** \\\n * **USBankAccountNumber** \\\n * **USDriversLicenseNumber** \\\n * **USIndividualTaxpayerIdentification** \\\n * **USSocialSecurityNumber** \\\n * **UAPassportNumberDomestic** \\\n * **UAPassportNumberInternational** \\\n * **Organization** \\\n * **Email** \\\n * **URL** \\\n * **Age** \\\n * **PhoneNumber** \\\n * **IPAddress** \\\n * **Date** \\\n * **Person** \\\n * **Address** \\\n * **All** \\\n * **Default**\n */\nexport type PiiEntityCategory = string;\n\n/** Known values of {@link ClassificationType} that the service accepts. */\nexport enum KnownClassificationType {\n  /** Single */\n  Single = \"Single\",\n  /** Multi */\n  Multi = \"Multi\"\n}\n\n/**\n * Defines values for ClassificationType. \\\n * {@link KnownClassificationType} can be used interchangeably with ClassificationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Single** \\\n * **Multi**\n */\nexport type ClassificationType = string;\n\n/** Known values of {@link ResolutionKind} that the service accepts. */\nexport enum KnownResolutionKind {\n  /** BooleanResolution */\n  BooleanResolution = \"BooleanResolution\",\n  /** DateTimeResolution */\n  DateTimeResolution = \"DateTimeResolution\",\n  /** NumberResolution */\n  NumberResolution = \"NumberResolution\",\n  /** OrdinalResolution */\n  OrdinalResolution = \"OrdinalResolution\",\n  /** SpeedResolution */\n  SpeedResolution = \"SpeedResolution\",\n  /** WeightResolution */\n  WeightResolution = \"WeightResolution\",\n  /** LengthResolution */\n  LengthResolution = \"LengthResolution\",\n  /** VolumeResolution */\n  VolumeResolution = \"VolumeResolution\",\n  /** AreaResolution */\n  AreaResolution = \"AreaResolution\",\n  /** AgeResolution */\n  AgeResolution = \"AgeResolution\",\n  /** InformationResolution */\n  InformationResolution = \"InformationResolution\",\n  /** TemperatureResolution */\n  TemperatureResolution = \"TemperatureResolution\",\n  /** CurrencyResolution */\n  CurrencyResolution = \"CurrencyResolution\",\n  /** NumericRangeResolution */\n  NumericRangeResolution = \"NumericRangeResolution\",\n  /** TemporalSpanResolution */\n  TemporalSpanResolution = \"TemporalSpanResolution\"\n}\n\n/**\n * Defines values for ResolutionKind. \\\n * {@link KnownResolutionKind} can be used interchangeably with ResolutionKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **BooleanResolution** \\\n * **DateTimeResolution** \\\n * **NumberResolution** \\\n * **OrdinalResolution** \\\n * **SpeedResolution** \\\n * **WeightResolution** \\\n * **LengthResolution** \\\n * **VolumeResolution** \\\n * **AreaResolution** \\\n * **AgeResolution** \\\n * **InformationResolution** \\\n * **TemperatureResolution** \\\n * **CurrencyResolution** \\\n * **NumericRangeResolution** \\\n * **TemporalSpanResolution**\n */\nexport type ResolutionKind = string;\n\n/** Known values of {@link WarningCode} that the service accepts. */\nexport enum KnownWarningCode {\n  /** LongWordsInDocument */\n  LongWordsInDocument = \"LongWordsInDocument\",\n  /** DocumentTruncated */\n  DocumentTruncated = \"DocumentTruncated\"\n}\n\n/**\n * Defines values for WarningCode. \\\n * {@link KnownWarningCode} can be used interchangeably with WarningCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LongWordsInDocument** \\\n * **DocumentTruncated**\n */\nexport type WarningCode = string;\n\n/** Known values of {@link ScriptKind} that the service accepts. */\nexport enum KnownScriptKind {\n  /** Latin */\n  Latin = \"Latin\"\n}\n\n/**\n * Defines values for ScriptKind. \\\n * {@link KnownScriptKind} can be used interchangeably with ScriptKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Latin**\n */\nexport type ScriptKind = string;\n\n/** Known values of {@link FhirVersion} that the service accepts. */\nexport enum KnownFhirVersion {\n  /** Four01 */\n  Four01 = \"4.0.1\"\n}\n\n/**\n * Defines values for FhirVersion. \\\n * {@link KnownFhirVersion} can be used interchangeably with FhirVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **4.0.1**\n */\nexport type FhirVersion = string;\n\n/** Known values of {@link HealthcareDocumentType} that the service accepts. */\nexport enum KnownHealthcareDocumentType {\n  /** None */\n  None = \"None\",\n  /** ClinicalTrial */\n  ClinicalTrial = \"ClinicalTrial\",\n  /** DischargeSummary */\n  DischargeSummary = \"DischargeSummary\",\n  /** ProgressNote */\n  ProgressNote = \"ProgressNote\",\n  /** HistoryAndPhysical */\n  HistoryAndPhysical = \"HistoryAndPhysical\",\n  /** Consult */\n  Consult = \"Consult\",\n  /** Imaging */\n  Imaging = \"Imaging\",\n  /** Pathology */\n  Pathology = \"Pathology\",\n  /** ProcedureNote */\n  ProcedureNote = \"ProcedureNote\"\n}\n\n/**\n * Defines values for HealthcareDocumentType. \\\n * {@link KnownHealthcareDocumentType} can be used interchangeably with HealthcareDocumentType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **ClinicalTrial** \\\n * **DischargeSummary** \\\n * **ProgressNote** \\\n * **HistoryAndPhysical** \\\n * **Consult** \\\n * **Imaging** \\\n * **Pathology** \\\n * **ProcedureNote**\n */\nexport type HealthcareDocumentType = string;\n\n/** Known values of {@link HealthcareEntityCategory} that the service accepts. */\nexport enum KnownHealthcareEntityCategory {\n  /** BodyStructure */\n  BodyStructure = \"BodyStructure\",\n  /** Age */\n  Age = \"Age\",\n  /** Gender */\n  Gender = \"Gender\",\n  /** ExaminationName */\n  ExaminationName = \"ExaminationName\",\n  /** Date */\n  Date = \"Date\",\n  /** Direction */\n  Direction = \"Direction\",\n  /** Frequency */\n  Frequency = \"Frequency\",\n  /** MeasurementValue */\n  MeasurementValue = \"MeasurementValue\",\n  /** MeasurementUnit */\n  MeasurementUnit = \"MeasurementUnit\",\n  /** RelationalOperator */\n  RelationalOperator = \"RelationalOperator\",\n  /** Time */\n  Time = \"Time\",\n  /** GeneOrProtein */\n  GeneOrProtein = \"GeneOrProtein\",\n  /** Variant */\n  Variant = \"Variant\",\n  /** AdministrativeEvent */\n  AdministrativeEvent = \"AdministrativeEvent\",\n  /** CareEnvironment */\n  CareEnvironment = \"CareEnvironment\",\n  /** HealthcareProfession */\n  HealthcareProfession = \"HealthcareProfession\",\n  /** Diagnosis */\n  Diagnosis = \"Diagnosis\",\n  /** SymptomOrSign */\n  SymptomOrSign = \"SymptomOrSign\",\n  /** ConditionQualifier */\n  ConditionQualifier = \"ConditionQualifier\",\n  /** MedicationClass */\n  MedicationClass = \"MedicationClass\",\n  /** MedicationName */\n  MedicationName = \"MedicationName\",\n  /** Dosage */\n  Dosage = \"Dosage\",\n  /** MedicationForm */\n  MedicationForm = \"MedicationForm\",\n  /** MedicationRoute */\n  MedicationRoute = \"MedicationRoute\",\n  /** FamilyRelation */\n  FamilyRelation = \"FamilyRelation\",\n  /** TreatmentName */\n  TreatmentName = \"TreatmentName\"\n}\n\n/**\n * Defines values for HealthcareEntityCategory. \\\n * {@link KnownHealthcareEntityCategory} can be used interchangeably with HealthcareEntityCategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **BodyStructure** \\\n * **Age** \\\n * **Gender** \\\n * **ExaminationName** \\\n * **Date** \\\n * **Direction** \\\n * **Frequency** \\\n * **MeasurementValue** \\\n * **MeasurementUnit** \\\n * **RelationalOperator** \\\n * **Time** \\\n * **GeneOrProtein** \\\n * **Variant** \\\n * **AdministrativeEvent** \\\n * **CareEnvironment** \\\n * **HealthcareProfession** \\\n * **Diagnosis** \\\n * **SymptomOrSign** \\\n * **ConditionQualifier** \\\n * **MedicationClass** \\\n * **MedicationName** \\\n * **Dosage** \\\n * **MedicationForm** \\\n * **MedicationRoute** \\\n * **FamilyRelation** \\\n * **TreatmentName**\n */\nexport type HealthcareEntityCategory = string;\n\n/** Known values of {@link RelationType} that the service accepts. */\nexport enum KnownRelationType {\n  /** Abbreviation */\n  Abbreviation = \"Abbreviation\",\n  /** DirectionOfBodyStructure */\n  DirectionOfBodyStructure = \"DirectionOfBodyStructure\",\n  /** DirectionOfCondition */\n  DirectionOfCondition = \"DirectionOfCondition\",\n  /** DirectionOfExamination */\n  DirectionOfExamination = \"DirectionOfExamination\",\n  /** DirectionOfTreatment */\n  DirectionOfTreatment = \"DirectionOfTreatment\",\n  /** DosageOfMedication */\n  DosageOfMedication = \"DosageOfMedication\",\n  /** FormOfMedication */\n  FormOfMedication = \"FormOfMedication\",\n  /** FrequencyOfMedication */\n  FrequencyOfMedication = \"FrequencyOfMedication\",\n  /** FrequencyOfTreatment */\n  FrequencyOfTreatment = \"FrequencyOfTreatment\",\n  /** QualifierOfCondition */\n  QualifierOfCondition = \"QualifierOfCondition\",\n  /** RelationOfExamination */\n  RelationOfExamination = \"RelationOfExamination\",\n  /** RouteOfMedication */\n  RouteOfMedication = \"RouteOfMedication\",\n  /** TimeOfCondition */\n  TimeOfCondition = \"TimeOfCondition\",\n  /** TimeOfEvent */\n  TimeOfEvent = \"TimeOfEvent\",\n  /** TimeOfExamination */\n  TimeOfExamination = \"TimeOfExamination\",\n  /** TimeOfMedication */\n  TimeOfMedication = \"TimeOfMedication\",\n  /** TimeOfTreatment */\n  TimeOfTreatment = \"TimeOfTreatment\",\n  /** UnitOfCondition */\n  UnitOfCondition = \"UnitOfCondition\",\n  /** UnitOfExamination */\n  UnitOfExamination = \"UnitOfExamination\",\n  /** ValueOfCondition */\n  ValueOfCondition = \"ValueOfCondition\",\n  /** ValueOfExamination */\n  ValueOfExamination = \"ValueOfExamination\"\n}\n\n/**\n * Defines values for RelationType. \\\n * {@link KnownRelationType} can be used interchangeably with RelationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Abbreviation** \\\n * **DirectionOfBodyStructure** \\\n * **DirectionOfCondition** \\\n * **DirectionOfExamination** \\\n * **DirectionOfTreatment** \\\n * **DosageOfMedication** \\\n * **FormOfMedication** \\\n * **FrequencyOfMedication** \\\n * **FrequencyOfTreatment** \\\n * **QualifierOfCondition** \\\n * **RelationOfExamination** \\\n * **RouteOfMedication** \\\n * **TimeOfCondition** \\\n * **TimeOfEvent** \\\n * **TimeOfExamination** \\\n * **TimeOfMedication** \\\n * **TimeOfTreatment** \\\n * **UnitOfCondition** \\\n * **UnitOfExamination** \\\n * **ValueOfCondition** \\\n * **ValueOfExamination**\n */\nexport type RelationType = string;\n\n/** Known values of {@link AgeUnit} that the service accepts. */\nexport enum KnownAgeUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Year */\n  Year = \"Year\",\n  /** Month */\n  Month = \"Month\",\n  /** Week */\n  Week = \"Week\",\n  /** Day */\n  Day = \"Day\"\n}\n\n/**\n * Defines values for AgeUnit. \\\n * {@link KnownAgeUnit} can be used interchangeably with AgeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Year** \\\n * **Month** \\\n * **Week** \\\n * **Day**\n */\nexport type AgeUnit = string;\n\n/** Known values of {@link VolumeUnit} that the service accepts. */\nexport enum KnownVolumeUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** CubicMeter */\n  CubicMeter = \"CubicMeter\",\n  /** CubicCentimeter */\n  CubicCentimeter = \"CubicCentimeter\",\n  /** CubicMillimeter */\n  CubicMillimeter = \"CubicMillimeter\",\n  /** Hectoliter */\n  Hectoliter = \"Hectoliter\",\n  /** Decaliter */\n  Decaliter = \"Decaliter\",\n  /** Liter */\n  Liter = \"Liter\",\n  /** Centiliter */\n  Centiliter = \"Centiliter\",\n  /** Milliliter */\n  Milliliter = \"Milliliter\",\n  /** CubicYard */\n  CubicYard = \"CubicYard\",\n  /** CubicInch */\n  CubicInch = \"CubicInch\",\n  /** CubicFoot */\n  CubicFoot = \"CubicFoot\",\n  /** CubicMile */\n  CubicMile = \"CubicMile\",\n  /** FluidOunce */\n  FluidOunce = \"FluidOunce\",\n  /** Teaspoon */\n  Teaspoon = \"Teaspoon\",\n  /** Tablespoon */\n  Tablespoon = \"Tablespoon\",\n  /** Pint */\n  Pint = \"Pint\",\n  /** Quart */\n  Quart = \"Quart\",\n  /** Cup */\n  Cup = \"Cup\",\n  /** Gill */\n  Gill = \"Gill\",\n  /** Pinch */\n  Pinch = \"Pinch\",\n  /** FluidDram */\n  FluidDram = \"FluidDram\",\n  /** Barrel */\n  Barrel = \"Barrel\",\n  /** Minim */\n  Minim = \"Minim\",\n  /** Cord */\n  Cord = \"Cord\",\n  /** Peck */\n  Peck = \"Peck\",\n  /** Bushel */\n  Bushel = \"Bushel\",\n  /** Hogshead */\n  Hogshead = \"Hogshead\"\n}\n\n/**\n * Defines values for VolumeUnit. \\\n * {@link KnownVolumeUnit} can be used interchangeably with VolumeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **CubicMeter** \\\n * **CubicCentimeter** \\\n * **CubicMillimeter** \\\n * **Hectoliter** \\\n * **Decaliter** \\\n * **Liter** \\\n * **Centiliter** \\\n * **Milliliter** \\\n * **CubicYard** \\\n * **CubicInch** \\\n * **CubicFoot** \\\n * **CubicMile** \\\n * **FluidOunce** \\\n * **Teaspoon** \\\n * **Tablespoon** \\\n * **Pint** \\\n * **Quart** \\\n * **Cup** \\\n * **Gill** \\\n * **Pinch** \\\n * **FluidDram** \\\n * **Barrel** \\\n * **Minim** \\\n * **Cord** \\\n * **Peck** \\\n * **Bushel** \\\n * **Hogshead**\n */\nexport type VolumeUnit = string;\n\n/** Known values of {@link SpeedUnit} that the service accepts. */\nexport enum KnownSpeedUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** MeterPerSecond */\n  MeterPerSecond = \"MeterPerSecond\",\n  /** KilometerPerHour */\n  KilometerPerHour = \"KilometerPerHour\",\n  /** KilometerPerMinute */\n  KilometerPerMinute = \"KilometerPerMinute\",\n  /** KilometerPerSecond */\n  KilometerPerSecond = \"KilometerPerSecond\",\n  /** MilePerHour */\n  MilePerHour = \"MilePerHour\",\n  /** Knot */\n  Knot = \"Knot\",\n  /** FootPerSecond */\n  FootPerSecond = \"FootPerSecond\",\n  /** FootPerMinute */\n  FootPerMinute = \"FootPerMinute\",\n  /** YardPerMinute */\n  YardPerMinute = \"YardPerMinute\",\n  /** YardPerSecond */\n  YardPerSecond = \"YardPerSecond\",\n  /** MeterPerMillisecond */\n  MeterPerMillisecond = \"MeterPerMillisecond\",\n  /** CentimeterPerMillisecond */\n  CentimeterPerMillisecond = \"CentimeterPerMillisecond\",\n  /** KilometerPerMillisecond */\n  KilometerPerMillisecond = \"KilometerPerMillisecond\"\n}\n\n/**\n * Defines values for SpeedUnit. \\\n * {@link KnownSpeedUnit} can be used interchangeably with SpeedUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **MeterPerSecond** \\\n * **KilometerPerHour** \\\n * **KilometerPerMinute** \\\n * **KilometerPerSecond** \\\n * **MilePerHour** \\\n * **Knot** \\\n * **FootPerSecond** \\\n * **FootPerMinute** \\\n * **YardPerMinute** \\\n * **YardPerSecond** \\\n * **MeterPerMillisecond** \\\n * **CentimeterPerMillisecond** \\\n * **KilometerPerMillisecond**\n */\nexport type SpeedUnit = string;\n\n/** Known values of {@link AreaUnit} that the service accepts. */\nexport enum KnownAreaUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** SquareKilometer */\n  SquareKilometer = \"SquareKilometer\",\n  /** SquareHectometer */\n  SquareHectometer = \"SquareHectometer\",\n  /** SquareDecameter */\n  SquareDecameter = \"SquareDecameter\",\n  /** SquareDecimeter */\n  SquareDecimeter = \"SquareDecimeter\",\n  /** SquareMeter */\n  SquareMeter = \"SquareMeter\",\n  /** SquareCentimeter */\n  SquareCentimeter = \"SquareCentimeter\",\n  /** SquareMillimeter */\n  SquareMillimeter = \"SquareMillimeter\",\n  /** SquareInch */\n  SquareInch = \"SquareInch\",\n  /** SquareFoot */\n  SquareFoot = \"SquareFoot\",\n  /** SquareMile */\n  SquareMile = \"SquareMile\",\n  /** SquareYard */\n  SquareYard = \"SquareYard\",\n  /** Acre */\n  Acre = \"Acre\"\n}\n\n/**\n * Defines values for AreaUnit. \\\n * {@link KnownAreaUnit} can be used interchangeably with AreaUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **SquareKilometer** \\\n * **SquareHectometer** \\\n * **SquareDecameter** \\\n * **SquareDecimeter** \\\n * **SquareMeter** \\\n * **SquareCentimeter** \\\n * **SquareMillimeter** \\\n * **SquareInch** \\\n * **SquareFoot** \\\n * **SquareMile** \\\n * **SquareYard** \\\n * **Acre**\n */\nexport type AreaUnit = string;\n\n/** Known values of {@link LengthUnit} that the service accepts. */\nexport enum KnownLengthUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Kilometer */\n  Kilometer = \"Kilometer\",\n  /** Hectometer */\n  Hectometer = \"Hectometer\",\n  /** Decameter */\n  Decameter = \"Decameter\",\n  /** Meter */\n  Meter = \"Meter\",\n  /** Decimeter */\n  Decimeter = \"Decimeter\",\n  /** Centimeter */\n  Centimeter = \"Centimeter\",\n  /** Millimeter */\n  Millimeter = \"Millimeter\",\n  /** Micrometer */\n  Micrometer = \"Micrometer\",\n  /** Nanometer */\n  Nanometer = \"Nanometer\",\n  /** Picometer */\n  Picometer = \"Picometer\",\n  /** Mile */\n  Mile = \"Mile\",\n  /** Yard */\n  Yard = \"Yard\",\n  /** Inch */\n  Inch = \"Inch\",\n  /** Foot */\n  Foot = \"Foot\",\n  /** LightYear */\n  LightYear = \"LightYear\",\n  /** Pt */\n  Pt = \"Pt\"\n}\n\n/**\n * Defines values for LengthUnit. \\\n * {@link KnownLengthUnit} can be used interchangeably with LengthUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Kilometer** \\\n * **Hectometer** \\\n * **Decameter** \\\n * **Meter** \\\n * **Decimeter** \\\n * **Centimeter** \\\n * **Millimeter** \\\n * **Micrometer** \\\n * **Nanometer** \\\n * **Picometer** \\\n * **Mile** \\\n * **Yard** \\\n * **Inch** \\\n * **Foot** \\\n * **LightYear** \\\n * **Pt**\n */\nexport type LengthUnit = string;\n\n/** Known values of {@link InformationUnit} that the service accepts. */\nexport enum KnownInformationUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Bit */\n  Bit = \"Bit\",\n  /** Kilobit */\n  Kilobit = \"Kilobit\",\n  /** Megabit */\n  Megabit = \"Megabit\",\n  /** Gigabit */\n  Gigabit = \"Gigabit\",\n  /** Terabit */\n  Terabit = \"Terabit\",\n  /** Petabit */\n  Petabit = \"Petabit\",\n  /** Byte */\n  Byte = \"Byte\",\n  /** Kilobyte */\n  Kilobyte = \"Kilobyte\",\n  /** Megabyte */\n  Megabyte = \"Megabyte\",\n  /** Gigabyte */\n  Gigabyte = \"Gigabyte\",\n  /** Terabyte */\n  Terabyte = \"Terabyte\",\n  /** Petabyte */\n  Petabyte = \"Petabyte\"\n}\n\n/**\n * Defines values for InformationUnit. \\\n * {@link KnownInformationUnit} can be used interchangeably with InformationUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Bit** \\\n * **Kilobit** \\\n * **Megabit** \\\n * **Gigabit** \\\n * **Terabit** \\\n * **Petabit** \\\n * **Byte** \\\n * **Kilobyte** \\\n * **Megabyte** \\\n * **Gigabyte** \\\n * **Terabyte** \\\n * **Petabyte**\n */\nexport type InformationUnit = string;\n\n/** Known values of {@link TemperatureUnit} that the service accepts. */\nexport enum KnownTemperatureUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Fahrenheit */\n  Fahrenheit = \"Fahrenheit\",\n  /** Kelvin */\n  Kelvin = \"Kelvin\",\n  /** Rankine */\n  Rankine = \"Rankine\",\n  /** Celsius */\n  Celsius = \"Celsius\"\n}\n\n/**\n * Defines values for TemperatureUnit. \\\n * {@link KnownTemperatureUnit} can be used interchangeably with TemperatureUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Fahrenheit** \\\n * **Kelvin** \\\n * **Rankine** \\\n * **Celsius**\n */\nexport type TemperatureUnit = string;\n\n/** Known values of {@link WeightUnit} that the service accepts. */\nexport enum KnownWeightUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Kilogram */\n  Kilogram = \"Kilogram\",\n  /** Gram */\n  Gram = \"Gram\",\n  /** Milligram */\n  Milligram = \"Milligram\",\n  /** Gallon */\n  Gallon = \"Gallon\",\n  /** MetricTon */\n  MetricTon = \"MetricTon\",\n  /** Ton */\n  Ton = \"Ton\",\n  /** Pound */\n  Pound = \"Pound\",\n  /** Ounce */\n  Ounce = \"Ounce\",\n  /** Grain */\n  Grain = \"Grain\",\n  /** PennyWeight */\n  PennyWeight = \"PennyWeight\",\n  /** LongTonBritish */\n  LongTonBritish = \"LongTonBritish\",\n  /** ShortTonUS */\n  ShortTonUS = \"ShortTonUS\",\n  /** ShortHundredWeightUS */\n  ShortHundredWeightUS = \"ShortHundredWeightUS\",\n  /** Stone */\n  Stone = \"Stone\",\n  /** Dram */\n  Dram = \"Dram\"\n}\n\n/**\n * Defines values for WeightUnit. \\\n * {@link KnownWeightUnit} can be used interchangeably with WeightUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Kilogram** \\\n * **Gram** \\\n * **Milligram** \\\n * **Gallon** \\\n * **MetricTon** \\\n * **Ton** \\\n * **Pound** \\\n * **Ounce** \\\n * **Grain** \\\n * **PennyWeight** \\\n * **LongTonBritish** \\\n * **ShortTonUS** \\\n * **ShortHundredWeightUS** \\\n * **Stone** \\\n * **Dram**\n */\nexport type WeightUnit = string;\n\n/** Known values of {@link DateTimeSubKind} that the service accepts. */\nexport enum KnownDateTimeSubKind {\n  /** Time */\n  Time = \"Time\",\n  /** Date */\n  Date = \"Date\",\n  /** DateTime */\n  DateTime = \"DateTime\",\n  /** Duration */\n  Duration = \"Duration\",\n  /** Set */\n  Set = \"Set\"\n}\n\n/**\n * Defines values for DateTimeSubKind. \\\n * {@link KnownDateTimeSubKind} can be used interchangeably with DateTimeSubKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Time** \\\n * **Date** \\\n * **DateTime** \\\n * **Duration** \\\n * **Set**\n */\nexport type DateTimeSubKind = string;\n\n/** Known values of {@link TemporalModifier} that the service accepts. */\nexport enum KnownTemporalModifier {\n  /** AfterApprox */\n  AfterApprox = \"AfterApprox\",\n  /** Before */\n  Before = \"Before\",\n  /** BeforeStart */\n  BeforeStart = \"BeforeStart\",\n  /** Approx */\n  Approx = \"Approx\",\n  /** ReferenceUndefined */\n  ReferenceUndefined = \"ReferenceUndefined\",\n  /** SinceEnd */\n  SinceEnd = \"SinceEnd\",\n  /** AfterMid */\n  AfterMid = \"AfterMid\",\n  /** Start */\n  Start = \"Start\",\n  /** After */\n  After = \"After\",\n  /** BeforeEnd */\n  BeforeEnd = \"BeforeEnd\",\n  /** Until */\n  Until = \"Until\",\n  /** End */\n  End = \"End\",\n  /** Less */\n  Less = \"Less\",\n  /** Since */\n  Since = \"Since\",\n  /** AfterStart */\n  AfterStart = \"AfterStart\",\n  /** BeforeApprox */\n  BeforeApprox = \"BeforeApprox\",\n  /** Mid */\n  Mid = \"Mid\",\n  /** More */\n  More = \"More\"\n}\n\n/**\n * Defines values for TemporalModifier. \\\n * {@link KnownTemporalModifier} can be used interchangeably with TemporalModifier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AfterApprox** \\\n * **Before** \\\n * **BeforeStart** \\\n * **Approx** \\\n * **ReferenceUndefined** \\\n * **SinceEnd** \\\n * **AfterMid** \\\n * **Start** \\\n * **After** \\\n * **BeforeEnd** \\\n * **Until** \\\n * **End** \\\n * **Less** \\\n * **Since** \\\n * **AfterStart** \\\n * **BeforeApprox** \\\n * **Mid** \\\n * **More**\n */\nexport type TemporalModifier = string;\n\n/** Known values of {@link NumberKind} that the service accepts. */\nexport enum KnownNumberKind {\n  /** Integer */\n  Integer = \"Integer\",\n  /** Decimal */\n  Decimal = \"Decimal\",\n  /** Power */\n  Power = \"Power\",\n  /** Fraction */\n  Fraction = \"Fraction\",\n  /** Percent */\n  Percent = \"Percent\",\n  /** Unspecified */\n  Unspecified = \"Unspecified\"\n}\n\n/**\n * Defines values for NumberKind. \\\n * {@link KnownNumberKind} can be used interchangeably with NumberKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Integer** \\\n * **Decimal** \\\n * **Power** \\\n * **Fraction** \\\n * **Percent** \\\n * **Unspecified**\n */\nexport type NumberKind = string;\n\n/** Known values of {@link RelativeTo} that the service accepts. */\nexport enum KnownRelativeTo {\n  /** Current */\n  Current = \"Current\",\n  /** End */\n  End = \"End\",\n  /** Start */\n  Start = \"Start\"\n}\n\n/**\n * Defines values for RelativeTo. \\\n * {@link KnownRelativeTo} can be used interchangeably with RelativeTo,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Current** \\\n * **End** \\\n * **Start**\n */\nexport type RelativeTo = string;\n\n/** Known values of {@link RangeKind} that the service accepts. */\nexport enum KnownRangeKind {\n  /** Number */\n  Number = \"Number\",\n  /** Speed */\n  Speed = \"Speed\",\n  /** Weight */\n  Weight = \"Weight\",\n  /** Length */\n  Length = \"Length\",\n  /** Volume */\n  Volume = \"Volume\",\n  /** Area */\n  Area = \"Area\",\n  /** Age */\n  Age = \"Age\",\n  /** Information */\n  Information = \"Information\",\n  /** Temperature */\n  Temperature = \"Temperature\",\n  /** Currency */\n  Currency = \"Currency\"\n}\n\n/**\n * Defines values for RangeKind. \\\n * {@link KnownRangeKind} can be used interchangeably with RangeKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Number** \\\n * **Speed** \\\n * **Weight** \\\n * **Length** \\\n * **Volume** \\\n * **Area** \\\n * **Age** \\\n * **Information** \\\n * **Temperature** \\\n * **Currency**\n */\nexport type RangeKind = string;\n\n/** Known values of {@link ExtractiveSummarizationOrderingCriteria} that the service accepts. */\nexport enum KnownExtractiveSummarizationOrderingCriteria {\n  /** Indicates that results should be sorted in order of appearance in the text. */\n  Offset = \"Offset\",\n  /** Indicates that results should be sorted in order of importance (i.e. rank score) according to the model. */\n  Rank = \"Rank\"\n}\n\n/**\n * Defines values for ExtractiveSummarizationOrderingCriteria. \\\n * {@link KnownExtractiveSummarizationOrderingCriteria} can be used interchangeably with ExtractiveSummarizationOrderingCriteria,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Offset**: Indicates that results should be sorted in order of appearance in the text. \\\n * **Rank**: Indicates that results should be sorted in order of importance (i.e. rank score) according to the model.\n */\nexport type ExtractiveSummarizationOrderingCriteria = string;\n/** Defines values for EntityConditionality. */\nexport type EntityConditionality = \"hypothetical\" | \"conditional\";\n/** Defines values for EntityCertainty. */\nexport type EntityCertainty =\n  | \"positive\"\n  | \"positivePossible\"\n  | \"neutralPossible\"\n  | \"negativePossible\"\n  | \"negative\";\n/** Defines values for EntityAssociation. */\nexport type EntityAssociation = \"subject\" | \"other\";\n/** Defines values for DocumentSentimentLabel. */\nexport type DocumentSentimentLabel =\n  | \"positive\"\n  | \"neutral\"\n  | \"negative\"\n  | \"mixed\";\n/** Defines values for SentenceSentimentLabel. */\nexport type SentenceSentimentLabel = \"positive\" | \"neutral\" | \"negative\";\n/** Defines values for TokenSentimentLabel. */\nexport type TokenSentimentLabel = \"positive\" | \"mixed\" | \"negative\";\n/** Defines values for TargetRelationType. */\nexport type TargetRelationType = \"assessment\" | \"target\";\n\n/** Optional parameters. */\nexport interface AnalyzeOptionalParams extends coreClient.OperationOptions {\n  /** (Optional) if set to true, response will contain request and document level statistics. */\n  includeStatistics?: boolean;\n}\n\n/** Contains response data for the analyze operation. */\nexport type AnalyzeResponse = AnalyzeTextTaskResultUnion;\n\n/** Optional parameters. */\nexport interface AnalyzeBatchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the analyzeBatch operation. */\nexport type AnalyzeBatchResponse = GeneratedClientAnalyzeBatchHeaders;\n\n/** Optional parameters. */\nexport interface AnalyzeTextJobStatusOptionalParams\n  extends coreClient.OperationOptions {\n  /** (Optional) if set to true, response will contain request and document level statistics. */\n  includeStatistics?: boolean;\n  /** The maximum number of resources to return from the collection. */\n  top?: number;\n  /** An offset into the collection of the first resource to be returned. */\n  skip?: number;\n}\n\n/** Contains response data for the jobStatus operation. */\nexport type AnalyzeTextJobStatusResponse = AnalyzeTextJobState;\n\n/** Optional parameters. */\nexport interface AnalyzeTextCancelJobOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the cancelJob operation. */\nexport type AnalyzeTextCancelJobResponse = AnalyzeTextCancelJobHeaders;\n\n/** Optional parameters. */\nexport interface GeneratedClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}